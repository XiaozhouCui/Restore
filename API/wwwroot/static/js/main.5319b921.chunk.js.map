{"version":3,"sources":["app/models/pagination.ts","app/util/util.ts","features/basket/basketSlice.ts","features/account/accountSlice.ts","features/catalog/catalogSlice.ts","features/contact/counterSlice.ts","app/store/configureStore.ts","app/api/agent.ts","features/about/AboutPage.tsx","app/components/AppPagination.tsx","app/components/CheckboxButtons.tsx","app/components/RadioButtonGroup.tsx","app/hooks/useProducts.tsx","app/layout/LoadingComponent.tsx","features/catalog/ProductCard.tsx","features/catalog/ProductCardSkeleton.tsx","features/catalog/ProductList.tsx","features/catalog/ProductSearch.tsx","features/catalog/Catalog.tsx","app/errors/NotFound.tsx","features/catalog/ProductDetails.tsx","features/contact/ContactPage.tsx","features/home/HomePage.tsx","app/layout/SignedInMenu.tsx","app/layout/Header.tsx","app/errors/ServerError.tsx","features/basket/BasketSummary.tsx","features/basket/BasketTable.tsx","features/basket/BasketPage.tsx","features/account/Login.tsx","features/account/Register.tsx","app/layout/PrivateRoute.tsx","features/orders/OrderDetailed.tsx","features/orders/Orders.tsx","app/components/AppCheckbox.tsx","app/components/AppTextInput.tsx","features/checkout/AddressForm.tsx","features/checkout/StripeInput.tsx","features/checkout/PaymentForm.tsx","features/checkout/Review.tsx","features/checkout/checkoutValidation.ts","features/checkout/CheckoutPage.tsx","features/checkout/CheckoutWrapper.tsx","app/components/AppDropzone.tsx","app/components/AppSelectList.tsx","features/admin/productValidation.ts","features/admin/ProductForm.tsx","features/admin/Inventory.tsx","app/layout/App.tsx","reportWebVitals.ts","index.tsx"],"names":["PaginatedResponse","items","metaData","this","currencyFormat","amount","toFixed","fetchBasketAsync","createAsyncThunk","_","thunkAPI","a","agent","Basket","get","rejectWithValue","error","data","condition","key","b","document","cookie","match","pop","getCookie","addBasketItemAsync","productId","quantity","addItem","removeBasketItemAsync","removeItem","basketSlice","createSlice","name","initialState","basket","status","reducers","setBasket","state","action","payload","clearBasket","extraReducers","builder","addCase","pending","meta","arg","fulfilled","itemIndex","findIndex","i","undefined","splice","rejected","console","log","addMatcher","isAnyOf","actions","signInUser","Account","login","userDto","user","dispatch","localStorage","setItem","JSON","stringify","fetchCurrentUser","setUser","parse","getItem","currentUser","accountSlice","signOut","history","push","roles","atob","token","split","toast","productsAdapter","createEntityAdapter","getAxiosParams","productParams","params","URLSearchParams","append","pageNumber","toString","pageSize","orderBy","searchTerm","brands","length","types","fetchProductsAsync","getState","catalog","Catalog","list","response","setMetaData","fetchFilters","fetchProductAsync","details","catalogSlice","getInitialState","productsLoaded","filtersLoaded","setProductParams","setPageNumber","resetProductParams","setProduct","upsertOne","removeProduct","removeOne","setAll","productSelectors","getSelectors","counterSlice","title","increment","decrement","store","configureStore","reducer","counter","account","useAppSelector","useSelector","useAppDispatch","useDispatch","axios","defaults","baseURL","process","withCredentials","responseBody","interceptors","request","use","config","headers","Authorization","pagination","errors","modelStateErrors","flat","pathname","Promise","reject","requests","url","then","body","post","delete","put","createFormData","item","formData","FormData","id","TestErrors","get400Error","get401Error","get404Error","get500Error","getValidationError","values","register","fetchAddress","Orders","fetch","create","Payments","createPaymentIntent","Admin","createProduct","product","updateProduct","deleteProduct","AboutPage","useState","validationErrors","setValidationErrors","Container","Typography","gutterBottom","variant","ButtonGroup","fullWidth","Button","onClick","catch","Alert","severity","AlertTitle","List","map","ListItem","ListItemText","AppPagination","onPageChange","currentPage","totalCount","totalPages","first","last","Box","display","justifyContent","alignItems","Pagination","color","size","count","page","onChange","e","handlePageChange","CheckboxButtons","checked","checkedItems","setCheckedItems","FormGroup","FormControlLabel","label","control","Checkbox","indexOf","value","newChecked","filter","handleChecked","RadioButtonGroup","options","selectedValue","FormControl","RadioGroup","Radio","useProducts","products","selectAll","useEffect","LoadingComponent","message","Backdrop","open","invisible","height","CircularProgress","sx","position","top","ProductCard","Card","CardHeader","avatar","Avatar","bgcolor","charAt","toUpperCase","titleTypographyProps","fontWeight","CardMedia","backgroundSize","image","pictureUrl","CardContent","price","brand","type","CardActions","LoadingButton","loading","includes","component","Link","to","ProductCardSkeleton","Grid","xs","Skeleton","animation","width","style","marginBottom","ProductList","container","spacing","ProductSearch","setSearchTerm","debouncedSearch","debounce","event","target","TextField","sortOptions","columnSpacing","Paper","mb","p","NotFound","Divider","ProductDetails","productStatus","useParams","selectById","setQuantity","find","parseInt","src","alt","TableContainer","Table","TableBody","TableRow","TableCell","description","quantityInStock","disabled","updatedQuantity","ContactPage","HomePage","dots","infinite","speed","slidesToShow","slidesToScroll","maxHeight","SignedInMenu","React","anchorEl","setAnchorEl","Boolean","handleClose","currentTarget","typography","email","Menu","onClose","TransitionComponent","Fade","MenuItem","midLinks","path","rightLinks","navStyles","textDecoration","Header","darkMode","handleThemeChange","itemCount","reduce","sum","AppBar","Toolbar","NavLink","exact","Switch","IconButton","Badge","badgeContent","ShoppingCart","ServerError","useHistory","useLocation","detail","BasketSummary","subtotal","deliveryFee","colSpan","align","fontStyle","BasketTable","isBasket","minWidth","TableHead","border","scope","marginRight","Remove","Add","Delete","BasketPage","Login","location","useForm","mode","handleSubmit","formState","isSubmitting","isValid","submitForm","from","maxWidth","flexDirection","m","onSubmit","noValidate","mt","margin","autoFocus","required","username","helperText","password","Register","setError","success","forEach","handleApiErrors","pattern","PrivateRoute","Component","rest","render","props","some","r","OrderDetailed","order","setSelectedOrder","orderItems","orderStatus","orders","setOrders","setLoading","selectedOrderNumber","setSelectedOrderNumber","finally","o","total","orderDate","AppCheckbox","field","useController","defaultValue","AppTextInput","fieldState","multiline","rows","AddressForm","useFormContext","sm","isDirty","StripeInput","forwardRef","ref","elementRef","useRef","useImperativeHandle","focus","current","onReady","element","PaymentForm","cardState","onCardInputChange","md","elementError","cardNumber","autoComplete","InputLabelProps","shrink","InputProps","inputComponent","inputProps","CardNumberElement","cardExpiry","CardExpiryElement","cardCvc","CardCvcElement","Review","validationSchema","yup","fullName","address1","address2","city","zip","country","nameOnCard","steps","CheckoutPage","activeStep","setActiveStep","orderNumber","setOrderNumber","setCardState","cardComplete","setCardComplete","paymentMessage","setPaymentMessage","paymentSucceeded","setPaymentSucceeded","stripe","useStripe","elements","useElements","elementType","complete","currentValidationSchema","methods","resolver","yupResolver","reset","getValues","saveAddress","submitOrder","shippingAddress","cardElement","getElement","confirmCardPayment","clientSecret","payment_method","card","billing_details","paymentResult","paymentIntent","handleNext","handleBack","my","Stepper","pt","pb","Step","StepLabel","step","Error","getStepContent","ml","stripePromise","loadStripe","CheckoutWrapper","AppDropzone","dzStyles","borderColor","borderRadius","paddingTop","onDrop","useCallback","acceptedFiles","Object","assign","preview","URL","createObjectURL","useDropzone","getRootProps","getInputProps","isDragActive","UploadFile","fontSize","FormHelperText","AppSelectList","InputLabel","Select","index","moreThan","min","file","when","is","ProductForm","cancelEdit","watch","watchFile","revokeObjectURL","handleSubmitData","Inventory","editMode","setEditMode","selectedProduct","setSelectedProduct","setTarget","handleSelectProduct","startIcon","Edit","App","initApp","setDarkMode","paletteType","theme","createTheme","palette","background","default","ThemeProvider","hideProgressBar","CssBaseline","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createBrowserHistory","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.5319b921.chunk.js","sourcesContent":["export interface Metadata {\r\n  currentPage: number;\r\n  totalPages: number;\r\n  pageSize: number;\r\n  totalCount: number;\r\n}\r\n\r\nexport class PaginatedResponse<T> {\r\n  items: T;\r\n  metaData: Metadata;\r\n  constructor(items: T, metaData: Metadata) {\r\n    this.items = items;\r\n    this.metaData = metaData;\r\n  }\r\n}\r\n","export const getCookie = (key: string) => {\r\n  const b = document.cookie.match('(^|;)\\\\s*' + key + '\\\\s*=\\\\s*([^;]+)');\r\n  return b ? b.pop() : '';\r\n};\r\n\r\nexport const currencyFormat = (amount: number) => {\r\n  return '$' + (amount / 100).toFixed(2);\r\n};\r\n","import { createAsyncThunk, createSlice, isAnyOf } from '@reduxjs/toolkit';\r\nimport agent from '../../app/api/agent';\r\nimport { Basket } from '../../app/models/basket';\r\nimport { getCookie } from '../../app/util/util';\r\n\r\ninterface BasketState {\r\n  basket: Basket | null;\r\n  status: string;\r\n}\r\n\r\nconst initialState: BasketState = {\r\n  basket: null,\r\n  status: 'idle',\r\n};\r\n\r\n// async functions (thunks) from redux-toolkit, as action creators\r\n\r\nexport const fetchBasketAsync = createAsyncThunk<Basket>(\r\n  'basket/fetchBasketAsync',\r\n  async (_, thunkAPI) => {\r\n    try {\r\n      return await agent.Basket.get();\r\n    } catch (error: any) {\r\n      thunkAPI.rejectWithValue({ error: error.data });\r\n    }\r\n  },\r\n  {\r\n    // only fetch basket if 'buyerId' is in cookie\r\n    condition: () => {\r\n      if (!getCookie('buyerId')) return false;\r\n    },\r\n  }\r\n);\r\n\r\n// thunk: add item to basket, pass in productId and quantity, return a Basket obj\r\nexport const addBasketItemAsync = createAsyncThunk<\r\n  Basket,\r\n  { productId: number; quantity?: number }\r\n>(\r\n  'basket/addBasketItemAsync',\r\n  async ({ productId, quantity = 1 }, thunkAPI) => {\r\n    try {\r\n      return await agent.Basket.addItem(productId, quantity);\r\n    } catch (error: any) {\r\n      return thunkAPI.rejectWithValue({ error: error.data });\r\n    }\r\n  }\r\n);\r\n\r\n// thunk: remove item from basket, pass in productId, quantity and number, return void\r\nexport const removeBasketItemAsync = createAsyncThunk<\r\n  void, // return void\r\n  { productId: number; quantity: number; name?: string }\r\n>('basket/removeBasketItemAsync', async ({ productId, quantity }, thunkAPI) => {\r\n  try {\r\n    return await agent.Basket.removeItem(productId, quantity);\r\n  } catch (error: any) {\r\n    return thunkAPI.rejectWithValue({ error: error.data });\r\n  }\r\n});\r\n\r\nexport const basketSlice = createSlice({\r\n  name: 'basket',\r\n  initialState,\r\n  reducers: {\r\n    // action creators have the same name as reducers, but only have 1 arg for payload\r\n    setBasket: (state, action) => {\r\n      state.basket = action.payload;\r\n    },\r\n    clearBasket: (state) => {\r\n      state.basket = null;\r\n    },\r\n  },\r\n  // extraReducers are required for createAsyncThunk\r\n  extraReducers: (builder) => {\r\n    builder.addCase(addBasketItemAsync.pending, (state, action) => {\r\n      // action.payload will be undefined when pending\r\n      state.status = 'pendingAddItem' + action.meta.arg.productId; // append productId, so that not all items have spinners\r\n    });\r\n    builder.addCase(removeBasketItemAsync.pending, (state, action) => {\r\n      // action.meta.arg.name to target the button being clicked for spinner\r\n      state.status =\r\n        'pendingRemoveItem' + action.meta.arg.productId + action.meta.arg.name;\r\n    });\r\n    builder.addCase(removeBasketItemAsync.fulfilled, (state, action) => {\r\n      // action.meta.arg contains the productId and quantity (arg of removeBasketItemAsync)\r\n      const { productId, quantity } = action.meta.arg;\r\n      const itemIndex = state.basket?.items.findIndex(\r\n        (i) => i.productId === productId\r\n      );\r\n      if (itemIndex === undefined || itemIndex === -1) return;\r\n      // reduce item quantity\r\n      state.basket!.items[itemIndex].quantity -= quantity;\r\n      // remove item from basket if quantity is reduced to 0\r\n      if (state.basket?.items[itemIndex].quantity === 0) {\r\n        state.basket.items.splice(itemIndex, 1);\r\n      }\r\n      state.status = 'idle';\r\n    });\r\n    builder.addCase(removeBasketItemAsync.rejected, (state, action) => {\r\n      state.status = 'idle';\r\n      console.log(action.payload);\r\n    });\r\n    // addMatcher() must be add after addCase(), they can handle multiple cases\r\n    builder.addMatcher(\r\n      isAnyOf(addBasketItemAsync.fulfilled, fetchBasketAsync.fulfilled),\r\n      (state, action) => {\r\n        // payload is of type Basket, because addBasketItemAsync will return a Basket\r\n        state.basket = action.payload;\r\n        state.status = 'idle';\r\n      }\r\n    );\r\n    builder.addMatcher(\r\n      isAnyOf(addBasketItemAsync.rejected, fetchBasketAsync.rejected),\r\n      (state, action) => {\r\n        state.status = 'idle';\r\n        console.log(action.payload);\r\n      }\r\n    );\r\n  },\r\n});\r\n\r\n// exported setBasket only have 1 argument which is the payload of action\r\nexport const { setBasket, clearBasket } = basketSlice.actions;\r\n","import { createAsyncThunk, createSlice, isAnyOf } from '@reduxjs/toolkit';\r\nimport { FieldValues } from 'react-hook-form';\r\nimport agent from '../../app/api/agent';\r\nimport { User } from '../../app/models/user';\r\nimport { history } from '../..';\r\nimport { toast } from 'react-toastify';\r\nimport { setBasket } from '../basket/basketSlice';\r\n\r\ninterface AccountState {\r\n  user: User | null;\r\n}\r\n\r\nconst initialState: AccountState = {\r\n  user: null,\r\n};\r\n\r\n// thunk: login, pass in FieldValues and return User\r\nexport const signInUser = createAsyncThunk<User, FieldValues>(\r\n  'account/signInUser',\r\n  async (data, thunkAPI) => {\r\n    try {\r\n      // userDto is the response from API, it has email, token and basket (can be null)\r\n      const userDto = await agent.Account.login(data);\r\n      // user will have email and token, basket is destructured to update redux state\r\n      const { basket, ...user } = userDto;\r\n      // load basket (from API) into state\r\n      if (basket) thunkAPI.dispatch(setBasket(basket));\r\n      // save email and token into local storage\r\n      localStorage.setItem('user', JSON.stringify(user));\r\n      return user;\r\n    } catch (error: any) {\r\n      return thunkAPI.rejectWithValue({ error: error.data });\r\n    }\r\n  }\r\n);\r\n\r\n// thunk: get current user\r\nexport const fetchCurrentUser = createAsyncThunk<User>(\r\n  'account/fetchCurrentUser',\r\n  async (_, thunkAPI) => {\r\n    // when refreshing the page, if the user is already in local storage, load it into redux\r\n    thunkAPI.dispatch(setUser(JSON.parse(localStorage.getItem('user')!)));\r\n    try {\r\n      const userDto = await agent.Account.currentUser();\r\n      // destructure basket and user\r\n      const { basket, ...user } = userDto;\r\n      // update basket in state\r\n      if (basket) thunkAPI.dispatch(setBasket(basket));\r\n      // store token into local storage\r\n      localStorage.setItem('user', JSON.stringify(user));\r\n      return user;\r\n    } catch (error: any) {\r\n      return thunkAPI.rejectWithValue({ error: error.data });\r\n    }\r\n  },\r\n  {\r\n    // if no user in local storage, do not make this request (fetchCurrentUser)\r\n    condition: () => {\r\n      if (!localStorage.getItem('user')) return false;\r\n    },\r\n  }\r\n);\r\n\r\nexport const accountSlice = createSlice({\r\n  name: 'account',\r\n  initialState,\r\n  reducers: {\r\n    // signOut doesn't call API\r\n    signOut: (state) => {\r\n      state.user = null;\r\n      localStorage.removeItem('user');\r\n      history.push('/'); // browserHistory outside React\r\n    },\r\n    // add user to state (from local storage)\r\n    setUser: (state, action) => {\r\n      // use \"atob\" to get JWT payload (mid section) into JSON\r\n      let claims = JSON.parse(atob(action.payload.token.split('.')[1]));\r\n        // JWT payload object has a key \"http://schemas...\" for roles, it comes from .NET Identity\r\n      let roles =\r\n        claims['http://schemas.microsoft.com/ws/2008/06/identity/claims/role'];\r\n      state.user = {\r\n        ...action.payload,\r\n        // if a user has multiple roles they will come as an array, while single role comes as a string\r\n        roles: typeof roles === 'string' ? [roles] : roles,\r\n      };\r\n    },\r\n  },\r\n  // using createAsyncThunk will require extra reducers\r\n  extraReducers: (builder) => {\r\n    // if token has expired, log out the current user\r\n    builder.addCase(fetchCurrentUser.rejected, (state, action) => {\r\n      state.user = null;\r\n      localStorage.removeItem('user');\r\n      toast.error('Session expired - please login again');\r\n      history.push('/');\r\n    });\r\n    // handle 2 successful cases together: signInUser and fetchCurrentUser\r\n    builder.addMatcher(\r\n      isAnyOf(signInUser.fulfilled, fetchCurrentUser.fulfilled),\r\n      (state, action) => {\r\n        // use \"atob\" to get JWT payload (mid section) into JSON\r\n        let claims = JSON.parse(atob(action.payload.token.split('.')[1]));\r\n        // JWT payload object has a key \"http://schemas...\" for roles, it comes from .NET Identity\r\n        let roles =\r\n          claims[\r\n            'http://schemas.microsoft.com/ws/2008/06/identity/claims/role'\r\n          ];\r\n        state.user = {\r\n          ...action.payload,\r\n          // if a user has multiple roles they will come as an array, while single role comes as a string\r\n          roles: typeof roles === 'string' ? [roles] : roles,\r\n        };\r\n      }\r\n    );\r\n    builder.addMatcher(isAnyOf(signInUser.rejected), (state, action) => {\r\n      // throw the error so that it can be captured by axios interceptor\r\n      throw action.payload; // axios interceptor will handle it by status code: toaster or server-error page\r\n    });\r\n  },\r\n});\r\n\r\nexport const { signOut, setUser } = accountSlice.actions;\r\n","import {\r\n  createAsyncThunk,\r\n  createEntityAdapter,\r\n  createSlice,\r\n} from '@reduxjs/toolkit';\r\nimport agent from '../../app/api/agent';\r\nimport { Metadata } from '../../app/models/pagination';\r\nimport { Product, ProductParams } from '../../app/models/product';\r\nimport { RootState } from '../../app/store/configureStore';\r\n\r\ninterface CatalogState {\r\n  productsLoaded: boolean;\r\n  filtersLoaded: boolean;\r\n  status: string;\r\n  brands: string[];\r\n  types: string[];\r\n  productParams: ProductParams;\r\n  metaData: Metadata | null;\r\n}\r\n\r\n// use createEntityAdapter to NORMALIZE data (products): { ids: [], entities: {} }\r\n// https://redux-toolkit.js.org/usage/usage-guide#managing-normalized-data\r\n\r\nconst productsAdapter = createEntityAdapter<Product>();\r\n\r\nconst getAxiosParams = (productParams: ProductParams) => {\r\n  const params = new URLSearchParams();\r\n  params.append('pageNumber', productParams.pageNumber.toString());\r\n  params.append('pageSize', productParams.pageSize.toString());\r\n  params.append('orderBy', productParams.orderBy);\r\n  // below params are optional\r\n  if (productParams.searchTerm)\r\n    params.append('searchTerm', productParams.searchTerm);\r\n  if (productParams.brands.length > 0)\r\n    params.append('brands', productParams.brands.toString());\r\n  if (productParams.types.length > 0)\r\n    params.append('types', productParams.types.toString());\r\n  return params;\r\n};\r\n\r\n// thunk: get a list of products\r\nexport const fetchProductsAsync = createAsyncThunk<\r\n  Product[],\r\n  void,\r\n  { state: RootState } // so that thunkAPI.getState() will know the state type\r\n>(\r\n  'catalog/fetchProductsAsync',\r\n  // \"_\" is equavalent to void\r\n  async (_, thunkAPI) => {\r\n    // use thunkAPI to get params from redux state\r\n    const params = getAxiosParams(thunkAPI.getState().catalog.productParams);\r\n    try {\r\n      const response = await agent.Catalog.list(params);\r\n      // update metadata in state\r\n      thunkAPI.dispatch(setMetaData(response.metaData));\r\n      return response.items;\r\n    } catch (error: any) {\r\n      // thunkAPI: make sure the error is not in the \"fulfilled\" case\r\n      return thunkAPI.rejectWithValue({ error: error.data });\r\n    }\r\n  }\r\n);\r\n\r\n// thunk: get filter options\r\nexport const fetchFilters = createAsyncThunk(\r\n  'catalog/fetchFilters',\r\n  async (_, thunkAPI) => {\r\n    try {\r\n      return agent.Catalog.fetchFilters();\r\n    } catch (error: any) {\r\n      return thunkAPI.rejectWithValue({ error: error.data });\r\n    }\r\n  }\r\n);\r\n\r\n// thunk: get a single product by ID (number)\r\nexport const fetchProductAsync = createAsyncThunk<Product, number>(\r\n  'catalog/fetchProductAsync',\r\n  async (productId, thunkAPI) => {\r\n    try {\r\n      return await agent.Catalog.details(productId);\r\n    } catch (error: any) {\r\n      // thunkAPI: make sure the error is not in the \"fulfilled\" case\r\n      return thunkAPI.rejectWithValue({ error: error.data });\r\n    }\r\n  }\r\n);\r\n\r\nconst initParams = () => {\r\n  return {\r\n    pageNumber: 1,\r\n    pageSize: 6,\r\n    orderBy: 'name',\r\n    brands: [],\r\n    types: [],\r\n  };\r\n};\r\n\r\nexport const catalogSlice = createSlice({\r\n  name: 'catalog',\r\n  initialState: productsAdapter.getInitialState<CatalogState>({\r\n    productsLoaded: false,\r\n    filtersLoaded: false,\r\n    status: 'idle',\r\n    brands: [],\r\n    types: [],\r\n    productParams: initParams(),\r\n    metaData: null,\r\n  }),\r\n  reducers: {\r\n    setProductParams: (state, action) => {\r\n      // force the useEffect hook to re-fetch products from API\r\n      state.productsLoaded = false;\r\n      state.productParams = {\r\n        ...state.productParams,\r\n        ...action.payload, // overide a property, e.g. orderBy, brands, types etc.\r\n        pageNumber: 1, // set page to 1 when a filter is clicked\r\n      };\r\n    },\r\n    setPageNumber: (state, action) => {\r\n      state.productsLoaded = false;\r\n      state.productParams = { ...state.productParams, ...action.payload };\r\n    },\r\n    resetProductParams: (state) => {\r\n      state.productParams = initParams();\r\n    },\r\n    setMetaData: (state, action) => {\r\n      state.metaData = action.payload;\r\n    },\r\n    // for admin to add/update product\r\n    setProduct: (state, action) => {\r\n      // productsAdapter will have all the methods to work on products array\r\n      productsAdapter.upsertOne(state, action.payload);\r\n      // force the reload of all products after add/update\r\n      state.productsLoaded = false;\r\n    },\r\n    // for admin to delete a product\r\n    removeProduct: (state, action) => {\r\n      productsAdapter.removeOne(state, action.payload); // payload is product ID\r\n      // force the reload of all products after removal\r\n      state.productsLoaded = false;\r\n    },\r\n  },\r\n  // extraReducers are required for createAsyncThunk\r\n  extraReducers: (builder) => {\r\n    builder.addCase(fetchProductsAsync.pending, (state) => {\r\n      state.status = 'pendingFetchProducts';\r\n    });\r\n    builder.addCase(fetchProductsAsync.fulfilled, (state, action) => {\r\n      // productsAdapter will have all the methods to work on products array\r\n      productsAdapter.setAll(state, action.payload); // payload contains list of products\r\n      state.status = 'idle';\r\n      state.productsLoaded = true; // no need to re-fetch products everytime\r\n    });\r\n    builder.addCase(fetchProductsAsync.rejected, (state, action) => {\r\n      state.status = 'idle';\r\n      console.log(action.payload);\r\n    });\r\n    builder.addCase(fetchProductAsync.pending, (state) => {\r\n      state.status = 'pendingFetchProduct';\r\n    });\r\n    builder.addCase(fetchProductAsync.fulfilled, (state, action) => {\r\n      // upsert a new product into the products array in state\r\n      productsAdapter.upsertOne(state, action.payload); // payload is a single product object\r\n      state.status = 'idle';\r\n    });\r\n    builder.addCase(fetchProductAsync.rejected, (state, action) => {\r\n      state.status = 'idle';\r\n      console.log(action.payload);\r\n    });\r\n    builder.addCase(fetchFilters.pending, (state) => {\r\n      state.status = 'pendingFetchFilters';\r\n    });\r\n    builder.addCase(fetchFilters.fulfilled, (state, action) => {\r\n      state.brands = action.payload.brands;\r\n      state.types = action.payload.types;\r\n      state.filtersLoaded = true;\r\n      state.status = 'idle';\r\n    });\r\n    builder.addCase(fetchFilters.rejected, (state, action) => {\r\n      state.status = 'idle';\r\n      console.log(action.payload);\r\n    });\r\n  },\r\n});\r\n\r\n// productSelectors is the normalized products, and has all the useful methods\r\nexport const productSelectors = productsAdapter.getSelectors(\r\n  (state: RootState) => state.catalog\r\n);\r\n\r\n// export reducers as action creators\r\nexport const {\r\n  setProductParams,\r\n  resetProductParams,\r\n  setMetaData,\r\n  setPageNumber,\r\n  setProduct,\r\n  removeProduct,\r\n} = catalogSlice.actions;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport interface CounterState {\r\n  data: number;\r\n  title: string;\r\n}\r\n\r\nconst initialState: CounterState = {\r\n  data: 42,\r\n  title: 'YARC (yet another redux counter with toolkit)',\r\n};\r\n\r\n// redux-toolkit will handle all action creators and reducers\r\nexport const counterSlice = createSlice({\r\n  name: 'counter',\r\n  initialState,\r\n  reducers: {\r\n    increment: (state, action) => {\r\n      // redux-toolkit will return immutable state behind the scene\r\n      state.data += action.payload;\r\n    },\r\n    decrement: (state, action) => {\r\n      state.data -= action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { increment, decrement } = counterSlice.actions;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\r\nimport { accountSlice } from '../../features/account/accountSlice';\r\nimport { basketSlice } from '../../features/basket/basketSlice';\r\nimport { catalogSlice } from '../../features/catalog/catalogSlice';\r\nimport { counterSlice } from '../../features/contact/counterSlice';\r\n// import { createStore } from 'redux';\r\n// import counterReducer from '../../features/contact/counterReducer';\r\n\r\n// // using original redux (without redux-toolkit)\r\n// export const configureStore = () => {\r\n//   return createStore(counterReducer);\r\n// };\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    counter: counterSlice.reducer,\r\n    basket: basketSlice.reducer,\r\n    catalog: catalogSlice.reducer,\r\n    account: accountSlice.reducer,\r\n  },\r\n});\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppDispatch = typeof store.dispatch;\r\n\r\n// custom hooks\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\n","import axios, { AxiosError, AxiosResponse } from 'axios';\r\nimport { toast } from 'react-toastify';\r\nimport { history } from '../..';\r\nimport { PaginatedResponse } from '../models/pagination';\r\nimport { store } from '../store/configureStore';\r\n\r\nconst sleep = () => new Promise((resolve) => setTimeout(resolve, 500));\r\n\r\n// all requests url will be pre-fixed with this base url\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\n// allow receive/set cookies in browser\r\naxios.defaults.withCredentials = true;\r\n\r\nconst responseBody = (response: AxiosResponse) => response.data;\r\n\r\naxios.interceptors.request.use((config) => {\r\n  // check if redux state has the token\r\n  const token = store.getState().account.user?.token;\r\n  // if token already exists, add it to all requests' headers\r\n  if (token) config.headers.Authorization = `Bearer ${token}`;\r\n  return config;\r\n});\r\n\r\n// interceptor\r\naxios.interceptors.response.use(\r\n  async (response) => {\r\n    if (process.env.NODE_ENV === 'development') await sleep();\r\n    const pagination = response.headers['pagination']; // 'pagination' must be lower case\r\n    // if has pagination header, merge it with response body\r\n    if (pagination) {\r\n      response.data = new PaginatedResponse(\r\n        response.data,\r\n        JSON.parse(pagination)\r\n      );\r\n      // now respons.data will contain items array and metadata obj\r\n      return response;\r\n    }\r\n    return response;\r\n  },\r\n  (error: AxiosError) => {\r\n    const { data, status } = error.response!;\r\n    switch (status) {\r\n      case 400:\r\n        // check if 400 is a form validation error\r\n        if (data.errors) {\r\n          const modelStateErrors: string[] = [];\r\n          for (const key in data.errors) {\r\n            if (data.errors[key]) {\r\n              modelStateErrors.push(data.errors[key]);\r\n            }\r\n          }\r\n          // will be caught in the component\r\n          throw modelStateErrors.flat();\r\n        }\r\n        // for other 400 errors\r\n        toast.error(data.title);\r\n        break;\r\n      case 401:\r\n        toast.error(data.title);\r\n        break;\r\n      case 403:\r\n        toast.error('You are not allowed to do that!');\r\n        break;\r\n      case 500:\r\n        // pass data to ServerError component as props \"history/location\"\r\n        history.push({\r\n          pathname: '/server-error',\r\n          state: { error: data },\r\n        });\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    return Promise.reject(error.response);\r\n  }\r\n);\r\n\r\n// centralise all requests\r\nconst requests = {\r\n  get: (url: string, params?: URLSearchParams) =>\r\n    axios.get(url, { params }).then(responseBody),\r\n  post: (url: string, body: {}) => axios.post(url, body).then(responseBody),\r\n  put: (url: string, body: {}) => axios.put(url, body).then(responseBody),\r\n  delete: (url: string) => axios.delete(url).then(responseBody),\r\n  postForm: (url: string, data: FormData) =>\r\n    axios\r\n      .post(url, data, {\r\n        headers: { 'Content-type': 'multipart/form-data' },\r\n      })\r\n      .then(responseBody),\r\n  putForm: (url: string, data: FormData) =>\r\n    axios\r\n      .put(url, data, {\r\n        headers: { 'Content-type': 'multipart/form-data' },\r\n      })\r\n      .then(responseBody),\r\n};\r\n\r\n// helper function to convert ProductForm inputs to FormData object\r\nconst createFormData = (item: any) => {\r\n  let formData = new FormData();\r\n  for (const key in item) {\r\n    formData.append(key, item[key]);\r\n  }\r\n  return formData;\r\n};\r\n\r\n// Requests for admin to create/update products\r\nconst Admin = {\r\n  createProduct: (product: any) =>\r\n    requests.postForm('products', createFormData(product)),\r\n  updateProduct: (product: any) =>\r\n    requests.putForm('products', createFormData(product)),\r\n  deleteProduct: (id: number) => requests.delete(`products/${id}`),\r\n};\r\n\r\n// Requests for catalog controller\r\nconst Catalog = {\r\n  // get('products', params) is GET http://localhost:5000/api/products?pageNumber=1&pageSize=6&orderBy=name\r\n  list: (params: URLSearchParams) => requests.get('products', params),\r\n  details: (id: number) => requests.get(`products/${id}`),\r\n  // get filter options to be rendered\r\n  fetchFilters: () => requests.get('products/filters'),\r\n};\r\n\r\nconst TestErrors = {\r\n  get400Error: () => requests.get('buggy/bad-request'),\r\n  get401Error: () => requests.get('buggy/unauthorised'),\r\n  get404Error: () => requests.get('buggy/not-found'),\r\n  get500Error: () => requests.get('buggy/server-error'),\r\n  getValidationError: () => requests.get('buggy/validation-error'),\r\n};\r\n\r\n// Requests for basket controller\r\nconst Basket = {\r\n  // cookies \"buyerId\" included in req and res\r\n  get: () => requests.get('basket'),\r\n  addItem: (productId: number, quantity = 1) =>\r\n    requests.post(`basket?productId=${productId}&quantity=${quantity}`, {}),\r\n  removeItem: (productId: number, quantity = 1) =>\r\n    requests.delete(`basket?productId=${productId}&quantity=${quantity}`),\r\n};\r\n\r\n// Requests for account controller\r\nconst Account = {\r\n  login: (values: any) => requests.post('account/login', values),\r\n  register: (values: any) => requests.post('account/register', values),\r\n  currentUser: () => requests.get('account/currentUser'),\r\n  fetchAddress: () => requests.get('account/savedAddress'),\r\n};\r\n\r\nconst Orders = {\r\n  list: () => requests.get('orders'),\r\n  fetch: (id: number) => requests.get(`orders/${id}`),\r\n  create: (values: any) => requests.post('orders', values),\r\n};\r\n\r\nconst Payments = {\r\n  createPaymentIntent: () => requests.post('payment', {}),\r\n};\r\n\r\nconst agent = {\r\n  Catalog,\r\n  TestErrors,\r\n  Basket,\r\n  Account,\r\n  Orders,\r\n  Payments,\r\n  Admin,\r\n};\r\n\r\nexport default agent;\r\n","import {\r\n  Alert,\r\n  AlertTitle,\r\n  Button,\r\n  ButtonGroup,\r\n  Container,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { useState } from \"react\";\r\nimport agent from \"../../app/api/agent\";\r\n\r\nexport default function AboutPage() {\r\n  const [validationErrors, setValidationErrors] = useState<string[]>([]);\r\n\r\n  const getValidationError = () => {\r\n    agent.TestErrors.getValidationError()\r\n      .then(() => console.log(\"should not see this\"))\r\n      .catch((error) => setValidationErrors(error));\r\n  };\r\n  return (\r\n    <Container>\r\n      <Typography gutterBottom variant=\"h2\">\r\n        Errors for testing purposes\r\n      </Typography>\r\n      <ButtonGroup fullWidth>\r\n        <Button\r\n          variant=\"contained\"\r\n          onClick={() =>\r\n            agent.TestErrors.get400Error().catch((error) => console.log(error))\r\n          }\r\n        >\r\n          Test 400 Error\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          onClick={() =>\r\n            agent.TestErrors.get401Error().catch((error) => console.log(error))\r\n          }\r\n        >\r\n          Test 401 Error\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          onClick={() =>\r\n            agent.TestErrors.get404Error().catch((error) => console.log(error))\r\n          }\r\n        >\r\n          Test 404 Error\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          onClick={() =>\r\n            agent.TestErrors.get500Error().catch((error) => console.log(error))\r\n          }\r\n        >\r\n          Test 500 Error\r\n        </Button>\r\n        <Button variant=\"contained\" onClick={getValidationError}>\r\n          Test Validation Error\r\n        </Button>\r\n      </ButtonGroup>\r\n      {validationErrors.length > 0 && (\r\n        <Alert severity=\"error\">\r\n          <AlertTitle>Validatin Errors</AlertTitle>\r\n          <List>\r\n            {validationErrors.map((error) => (\r\n              <ListItem key={error}>\r\n                <ListItemText>{error}</ListItemText>\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        </Alert>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n","import { Box, Typography, Pagination } from '@mui/material';\r\nimport { useState } from 'react';\r\nimport { Metadata } from '../models/pagination';\r\n\r\ninterface Props {\r\n  metaData: Metadata;\r\n  onPageChange: (page: number) => void;\r\n}\r\n\r\nconst AppPagination = ({ metaData, onPageChange }: Props) => {\r\n  const { currentPage, pageSize, totalCount, totalPages } = metaData;\r\n  const [pageNumber, setPageNumber] = useState(currentPage);\r\n  const first = (currentPage - 1) * pageSize + 1;\r\n  const last =\r\n    currentPage * pageSize > totalCount ? totalCount : currentPage * pageSize;\r\n\r\n  const handlePageChange = (page: number) => {\r\n    setPageNumber(page);\r\n    onPageChange(page);\r\n  };\r\n\r\n  return (\r\n    <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n      <Typography>\r\n        Displaying {first}-{last} of {totalCount} items\r\n      </Typography>\r\n      <Pagination\r\n        color=\"secondary\"\r\n        size=\"large\"\r\n        count={totalPages}\r\n        page={pageNumber}\r\n        onChange={(e, page) => handlePageChange(page)}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default AppPagination;\r\n","import { FormGroup, FormControlLabel, Checkbox } from '@mui/material';\r\nimport { useState } from 'react';\r\n\r\ninterface Props {\r\n  items: string[];\r\n  checked?: string[]; // array of checked items\r\n  onChange: (items: string[]) => void;\r\n}\r\n\r\nconst CheckboxButtons = ({ items, checked, onChange }: Props) => {\r\n  const [checkedItems, setCheckedItems] = useState(checked || []);\r\n\r\n  // when user click a checkbox\r\n  const handleChecked = (value: string) => {\r\n    // find if the current box is checked or not\r\n    const currentIndex = checkedItems.findIndex((item) => item === value);\r\n    let newChecked: string[] = [];\r\n    if (currentIndex === -1) {\r\n      newChecked = [...checkedItems, value];\r\n    } else {\r\n      newChecked = checkedItems.filter((item) => item !== value);\r\n    }\r\n    setCheckedItems(newChecked);\r\n    // pass the checked items to parent component and update redux state\r\n    onChange(newChecked);\r\n  };\r\n\r\n  return (\r\n    <FormGroup>\r\n      {items.map((item) => (\r\n        <FormControlLabel\r\n          key={item}\r\n          label={item}\r\n          control={\r\n            <Checkbox\r\n              checked={checkedItems.indexOf(item) !== -1}\r\n              onClick={() => handleChecked(item)}\r\n            />\r\n          }\r\n        />\r\n      ))}\r\n    </FormGroup>\r\n  );\r\n};\r\n\r\nexport default CheckboxButtons;\r\n","import {\r\n  FormControl,\r\n  RadioGroup,\r\n  FormControlLabel,\r\n  Radio,\r\n} from '@mui/material';\r\n\r\ninterface Props {\r\n  options: any[];\r\n  onChange: (event: any) => void;\r\n  selectedValue: string;\r\n}\r\n\r\nconst RadioButtonGroup = ({ options, onChange, selectedValue }: Props) => {\r\n  return (\r\n    <FormControl>\r\n      <RadioGroup onChange={onChange} value={selectedValue}>\r\n        {options.map(({ value, label }) => (\r\n          <FormControlLabel\r\n            key={value}\r\n            value={value}\r\n            control={<Radio />}\r\n            label={label}\r\n          />\r\n        ))}\r\n      </RadioGroup>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default RadioButtonGroup;\r\n","import { useEffect } from 'react';\r\nimport {\r\n  productSelectors,\r\n  fetchProductsAsync,\r\n  fetchFilters,\r\n} from '../../features/catalog/catalogSlice';\r\nimport { useAppSelector, useAppDispatch } from '../store/configureStore';\r\n\r\nconst useProducts = () => {\r\n  // get NORMALIZED products by using createEntityAdapter from redux-toolkit\r\n  const products = useAppSelector(productSelectors.selectAll); // productSelectors has all the useful methods\r\n  const { productsLoaded, filtersLoaded, brands, types, metaData } =\r\n    useAppSelector((state) => state.catalog);\r\n\r\n  const dispatch = useAppDispatch();\r\n\r\n  useEffect(() => {\r\n    // no need to re-fetch products everytime\r\n    if (!productsLoaded) dispatch(fetchProductsAsync());\r\n  }, [dispatch, productsLoaded]);\r\n\r\n  // adding another useEffect, so that fetchProductsAsync() will not run again\r\n  useEffect(() => {\r\n    if (!filtersLoaded) dispatch(fetchFilters());\r\n  }, [dispatch, filtersLoaded]);\r\n\r\n  return {\r\n    products,\r\n    productsLoaded,\r\n    filtersLoaded,\r\n    brands,\r\n    types,\r\n    metaData,\r\n  };\r\n};\r\n\r\nexport default useProducts;\r\n","import { Backdrop, Box, CircularProgress, Typography } from \"@mui/material\";\r\n\r\ninterface Props {\r\n  message?: string;\r\n}\r\n\r\nconst LoadingComponent = ({ message = \"Loading...\" }: Props) => {\r\n  return (\r\n    <Backdrop open={true} invisible={true}>\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n        height=\"100vh\"\r\n      >\r\n        <CircularProgress size={100} color=\"secondary\" />\r\n        <Typography\r\n          variant=\"h4\"\r\n          sx={{ justifyContent: \"center\", position: \"fixed\", top: \"60%\" }}\r\n        >\r\n          {message}\r\n        </Typography>\r\n      </Box>\r\n    </Backdrop>\r\n  );\r\n};\r\n\r\nexport default LoadingComponent;\r\n","import { LoadingButton } from '@mui/lab';\r\nimport {\r\n  Avatar,\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  CardMedia,\r\n  Typography,\r\n} from '@mui/material';\r\nimport { Link } from 'react-router-dom';\r\nimport { Product } from '../../app/models/product';\r\nimport { useAppDispatch, useAppSelector } from '../../app/store/configureStore';\r\nimport { currencyFormat } from '../../app/util/util';\r\nimport { addBasketItemAsync } from '../basket/basketSlice';\r\n\r\ninterface Props {\r\n  product: Product;\r\n}\r\n\r\nexport default function ProductCard({ product }: Props) {\r\n  const { status } = useAppSelector((state) => state.basket);\r\n  const dispatch = useAppDispatch();\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader\r\n        avatar={\r\n          <Avatar sx={{ bgcolor: 'secondary.main' }}>\r\n            {product.name.charAt(0).toUpperCase()}\r\n          </Avatar>\r\n        }\r\n        title={product.name}\r\n        titleTypographyProps={{\r\n          sx: { fontWeight: 'bold', color: 'primary.main' },\r\n        }}\r\n      />\r\n      <CardMedia\r\n        sx={{\r\n          height: 140,\r\n          backgroundSize: 'contain',\r\n          bgcolor: 'primary.light',\r\n        }}\r\n        image={product.pictureUrl}\r\n        title={product.name}\r\n      />\r\n      <CardContent>\r\n        <Typography gutterBottom color=\"secondary\" variant=\"h5\">\r\n          {currencyFormat(product.price)}\r\n        </Typography>\r\n        <Typography variant=\"body2\" color=\"text.secondary\">\r\n          {product.brand} / {product.type}\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions>\r\n        <LoadingButton\r\n          loading={status.includes('pendingAddItem' + product.id)}\r\n          onClick={() =>\r\n            dispatch(addBasketItemAsync({ productId: product.id }))\r\n          }\r\n          size=\"small\"\r\n        >\r\n          Add to cart\r\n        </LoadingButton>\r\n        <Button component={Link} to={`/catalog/${product.id}`} size=\"small\">\r\n          View\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}\r\n","import {\r\n  Grid,\r\n  Card,\r\n  CardHeader,\r\n  Skeleton,\r\n  CardContent,\r\n  CardActions,\r\n} from '@mui/material';\r\n\r\nexport default function ProductCardSkeleton() {\r\n  return (\r\n    <Grid item xs component={Card}>\r\n      <CardHeader\r\n        avatar={\r\n          <Skeleton\r\n            animation=\"wave\"\r\n            variant=\"circular\"\r\n            width={40}\r\n            height={40}\r\n          />\r\n        }\r\n        title={\r\n          <Skeleton\r\n            animation=\"wave\"\r\n            height={10}\r\n            width=\"80%\"\r\n            style={{ marginBottom: 6 }}\r\n          />\r\n        }\r\n      />\r\n      <Skeleton sx={{ height: 190 }} animation=\"wave\" variant=\"rectangular\" />\r\n      <CardContent>\r\n        <>\r\n          <Skeleton animation=\"wave\" height={10} style={{ marginBottom: 6 }} />\r\n          <Skeleton animation=\"wave\" height={10} width=\"80%\" />\r\n        </>\r\n      </CardContent>\r\n      <CardActions>\r\n        <>\r\n          <Skeleton animation=\"wave\" height={10} width=\"40%\" />\r\n          <Skeleton animation=\"wave\" height={10} width=\"20%\" />\r\n        </>\r\n      </CardActions>\r\n    </Grid>\r\n  );\r\n}\r\n","import { Grid } from '@mui/material';\r\nimport { Product } from '../../app/models/product';\r\nimport { useAppSelector } from '../../app/store/configureStore';\r\nimport ProductCard from './ProductCard';\r\nimport ProductCardSkeleton from './ProductCardSkeleton';\r\n\r\ninterface Props {\r\n  products: Product[];\r\n}\r\n\r\nexport default function ProductList({ products }: Props) {\r\n  const { productsLoaded } = useAppSelector((state) => state.catalog);\r\n  return (\r\n    <Grid container spacing={4}>\r\n      {products.map((product) => (\r\n        <Grid key={product.id} item xs={4}>\r\n          {!productsLoaded ? (\r\n            <ProductCardSkeleton />\r\n          ) : (\r\n            <ProductCard product={product} />\r\n          )}\r\n        </Grid>\r\n      ))}\r\n    </Grid>\r\n  );\r\n}\r\n","import { debounce, TextField } from '@mui/material';\r\nimport { useState } from 'react';\r\nimport { useAppDispatch, useAppSelector } from '../../app/store/configureStore';\r\nimport { setProductParams } from './catalogSlice';\r\n\r\nconst ProductSearch = () => {\r\n  const { productParams } = useAppSelector((state) => state.catalog);\r\n  const dispatch = useAppDispatch();\r\n  // local state for debounced search\r\n  const [searchTerm, setSearchTerm] = useState(productParams.searchTerm);\r\n  // delay the action (thunk) for 1 second\r\n  const debouncedSearch = debounce((event: any) => {\r\n    dispatch(setProductParams({ searchTerm: event.target.value }));\r\n  }, 1000);\r\n  return (\r\n    <TextField\r\n      label=\"Search Products\"\r\n      variant=\"outlined\"\r\n      fullWidth\r\n      value={searchTerm || ''}\r\n      onChange={(event: any) => {\r\n        setSearchTerm(event.target.value);\r\n        debouncedSearch(event);\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ProductSearch;\r\n","import { Grid, Paper } from '@mui/material';\r\nimport AppPagination from '../../app/components/AppPagination';\r\nimport CheckboxButtons from '../../app/components/CheckboxButtons';\r\nimport RadioButtonGroup from '../../app/components/RadioButtonGroup';\r\nimport useProducts from '../../app/hooks/useProducts';\r\nimport LoadingComponent from '../../app/layout/LoadingComponent';\r\nimport { useAppDispatch, useAppSelector } from '../../app/store/configureStore';\r\nimport { setPageNumber, setProductParams } from './catalogSlice';\r\nimport ProductList from './ProductList';\r\nimport ProductSearch from './ProductSearch';\r\n\r\nconst sortOptions = [\r\n  { value: 'name', label: 'Alphabetical' },\r\n  { value: 'priceDesc', label: 'Price - High to low' },\r\n  { value: 'price', label: 'Price - Low to high' },\r\n];\r\n\r\nexport default function Catalog() {\r\n  // use custom hook to get product-related variables\r\n  const { products, filtersLoaded, brands, types, metaData } = useProducts();\r\n  const { productParams } = useAppSelector((state) => state.catalog);\r\n\r\n  const dispatch = useAppDispatch();\r\n\r\n  if (!filtersLoaded) return <LoadingComponent message=\"Loading products...\" />;\r\n\r\n  return (\r\n    <Grid container columnSpacing={4}>\r\n      <Grid item xs={3}>\r\n        <Paper sx={{ mb: 2 }}>\r\n          <ProductSearch />\r\n        </Paper>\r\n        <Paper sx={{ mb: 2, p: 2 }}>\r\n          <RadioButtonGroup\r\n            selectedValue={productParams.orderBy}\r\n            options={sortOptions}\r\n            onChange={(e) =>\r\n              dispatch(setProductParams({ orderBy: e.target.value }))\r\n            }\r\n          />\r\n        </Paper>\r\n        <Paper sx={{ mb: 2, p: 2 }}>\r\n          <CheckboxButtons\r\n            items={brands}\r\n            checked={productParams.brands}\r\n            onChange={(items: string[]) =>\r\n              dispatch(setProductParams({ brands: items }))\r\n            }\r\n          />\r\n        </Paper>\r\n        <Paper sx={{ mb: 2, p: 2 }}>\r\n          <CheckboxButtons\r\n            items={types}\r\n            checked={productParams.types}\r\n            onChange={(items: string[]) =>\r\n              dispatch(setProductParams({ types: items }))\r\n            }\r\n          />\r\n        </Paper>\r\n      </Grid>\r\n      <Grid item xs={9}>\r\n        <ProductList products={products} />\r\n      </Grid>\r\n      <Grid item xs={3} />\r\n      <Grid item xs={9} sx={{ mb: 2 }}>\r\n        {metaData && (\r\n          <AppPagination\r\n            metaData={metaData}\r\n            onPageChange={(page: number) =>\r\n              dispatch(setPageNumber({ pageNumber: page }))\r\n            }\r\n          />\r\n        )}\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","import { Button, Container, Divider, Paper, Typography } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <Container component={Paper} sx={{ height: 400 }}>\r\n      <Typography gutterBottom variant=\"h3\">\r\n        Oops - we could not find what you are looking for\r\n      </Typography>\r\n      <Divider />\r\n      <Button fullWidth component={Link} to=\"/catalog\">\r\n        Go back to store\r\n      </Button>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import { LoadingButton } from '@mui/lab';\r\nimport {\r\n  Divider,\r\n  Grid,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableRow,\r\n  TextField,\r\n  Typography,\r\n} from '@mui/material';\r\nimport { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport NotFound from '../../app/errors/NotFound';\r\nimport LoadingComponent from '../../app/layout/LoadingComponent';\r\nimport { useAppDispatch, useAppSelector } from '../../app/store/configureStore';\r\nimport { currencyFormat } from '../../app/util/util';\r\nimport {\r\n  addBasketItemAsync,\r\n  removeBasketItemAsync,\r\n} from '../basket/basketSlice';\r\nimport { fetchProductAsync, productSelectors } from './catalogSlice';\r\n\r\nexport default function ProductDetails() {\r\n  const { basket, status } = useAppSelector((state) => state.basket);\r\n  const { status: productStatus } = useAppSelector((state) => state.catalog);\r\n  const dispatch = useAppDispatch();\r\n  // grab product ID from url /catalog/:id\r\n  const { id } = useParams<{ id: string }>();\r\n  const product = useAppSelector((state) =>\r\n    // productSelectors is the normalized products, and has all the useful methods\r\n    productSelectors.selectById(state, id)\r\n  );\r\n  const [quantity, setQuantity] = useState<number>(0);\r\n  // check if we have the current item in basket\r\n  const item = basket?.items.find((i) => i.productId === product?.id);\r\n\r\n  useEffect(() => {\r\n    // if current item is in basket, store its quantity into state\r\n    if (item) setQuantity(item.quantity);\r\n    if (!product) dispatch(fetchProductAsync(parseInt(id)));\r\n  }, [dispatch, id, item, product]);\r\n\r\n  const handleInputChange = (event: any) => {\r\n    // quantity should not be less than 0\r\n    if (event.target.value >= 0) {\r\n      setQuantity(parseInt(event.target.value));\r\n    }\r\n  };\r\n\r\n  const handleUpdateCart = () => {\r\n    // check if we are adding or removing item\r\n    if (!item || quantity > item.quantity) {\r\n      // check if adding a new item or increase number of existing item in basket\r\n      const updatedQuantity = item ? quantity - item.quantity : quantity;\r\n      dispatch(\r\n        addBasketItemAsync({\r\n          productId: product?.id!,\r\n          quantity: updatedQuantity,\r\n        })\r\n      );\r\n    } else {\r\n      // removing item\r\n      const updatedQuantity = item.quantity - quantity;\r\n      dispatch(\r\n        removeBasketItemAsync({\r\n          productId: product?.id!,\r\n          quantity: updatedQuantity,\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  if (productStatus.includes('pending'))\r\n    return <LoadingComponent message=\"Loading product...\" />;\r\n\r\n  if (!product) return <NotFound />;\r\n\r\n  return (\r\n    <Grid container spacing={6}>\r\n      <Grid item xs={6}>\r\n        <img\r\n          src={product.pictureUrl}\r\n          alt={product.name}\r\n          style={{ width: '100%' }}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <Typography variant=\"h3\">{product.name}</Typography>\r\n        <Divider sx={{ mb: 2 }} />\r\n        <Typography variant=\"h4\" color=\"secondary\">\r\n          {currencyFormat(product.price)}\r\n        </Typography>\r\n        <TableContainer>\r\n          <Table>\r\n            <TableBody>\r\n              <TableRow>\r\n                <TableCell>Name</TableCell>\r\n                <TableCell>{product.name}</TableCell>\r\n              </TableRow>\r\n              <TableRow>\r\n                <TableCell>Description</TableCell>\r\n                <TableCell>{product.description}</TableCell>\r\n              </TableRow>\r\n              <TableRow>\r\n                <TableCell>Type</TableCell>\r\n                <TableCell>{product.type}</TableCell>\r\n              </TableRow>\r\n              <TableRow>\r\n                <TableCell>Brand</TableCell>\r\n                <TableCell>{product.brand}</TableCell>\r\n              </TableRow>\r\n              <TableRow>\r\n                <TableCell>Quantity in stock</TableCell>\r\n                <TableCell>{product.quantityInStock}</TableCell>\r\n              </TableRow>\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              label=\"Quantity in Cart\"\r\n              fullWidth\r\n              value={quantity}\r\n              onChange={handleInputChange}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <LoadingButton\r\n              loading={status.includes('pending')}\r\n              disabled={\r\n                item?.quantity === quantity || (!item && quantity === 0)\r\n              }\r\n              onClick={handleUpdateCart}\r\n              sx={{ height: '55px' }}\r\n              color=\"primary\"\r\n              size=\"large\"\r\n              variant=\"contained\"\r\n              fullWidth\r\n            >\r\n              {item ? 'Update quantity' : 'Add to Cart'}\r\n            </LoadingButton>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","import { Button, ButtonGroup, Typography } from '@mui/material';\r\nimport { useAppDispatch, useAppSelector } from '../../app/store/configureStore';\r\nimport { decrement, increment } from './counterSlice';\r\n// import { useDispatch, useSelector } from 'react-redux';\r\n// import { CounterState, decrement, increment } from './counterReducer';\r\n\r\nexport default function ContactPage() {\r\n  // const dispatch = useDispatch();\r\n  // const { data, title } = useSelector((state: CounterState) => state);\r\n\r\n  const dispatch = useAppDispatch();\r\n  const { data, title } = useAppSelector((state) => state.counter);\r\n\r\n  return (\r\n    <>\r\n      <Typography variant=\"h2\">{title}</Typography>\r\n      <Typography variant=\"h5\">Data is: {data}</Typography>\r\n      <ButtonGroup>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"error\"\r\n          onClick={() => dispatch(decrement(1))}\r\n        >\r\n          Decrement\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={() => dispatch(increment(1))}\r\n        >\r\n          Increment\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          onClick={() => dispatch(increment(5))}\r\n        >\r\n          Increment by 5\r\n        </Button>\r\n      </ButtonGroup>\r\n    </>\r\n  );\r\n}\r\n","import { Box, Typography } from '@mui/material';\r\nimport Slider from 'react-slick';\r\n\r\nexport default function HomePage() {\r\n  const settings = {\r\n    dots: true,\r\n    infinite: true,\r\n    speed: 500,\r\n    slidesToShow: 1,\r\n    slidesToScroll: 1,\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Slider {...settings}>\r\n        <div>\r\n          <img\r\n            src=\"/images/hero1.jpg\"\r\n            alt=\"hero\"\r\n            style={{ display: 'block', width: '100%', maxHeight: 500 }}\r\n          />\r\n        </div>\r\n        <div>\r\n          <img\r\n            src=\"/images/hero2.jpg\"\r\n            alt=\"hero\"\r\n            style={{ display: 'block', width: '100%', maxHeight: 500 }}\r\n          />\r\n        </div>\r\n        <div>\r\n          <img\r\n            src=\"/images/hero3.jpg\"\r\n            alt=\"hero\"\r\n            style={{ display: 'block', width: '100%', maxHeight: 500 }}\r\n          />\r\n        </div>\r\n      </Slider>\r\n      <Box display=\"flex\" justifyContent=\"center\" sx={{ p: 4 }}>\r\n        <Typography variant=\"h2\">Welcome to the snow gear shop!</Typography>\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\n","import { Button, Menu, Fade, MenuItem } from '@mui/material';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { signOut } from '../../features/account/accountSlice';\r\nimport { clearBasket } from '../../features/basket/basketSlice';\r\nimport { useAppDispatch, useAppSelector } from '../store/configureStore';\r\n\r\nconst SignedInMenu = () => {\r\n  const dispatch = useAppDispatch();\r\n  const { user } = useAppSelector((state) => state.account);\r\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n  const open = Boolean(anchorEl);\r\n  const handleClick = (event: React.MouseEvent<HTMLElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button onClick={handleClick} color=\"inherit\" sx={{ typography: 'h6' }}>\r\n        {user?.email}\r\n      </Button>\r\n      <Menu\r\n        anchorEl={anchorEl}\r\n        open={open}\r\n        onClose={handleClose}\r\n        TransitionComponent={Fade}\r\n      >\r\n        <MenuItem onClick={handleClose}>Profile</MenuItem>\r\n        <MenuItem component={Link} to=\"/orders\">\r\n          My orders\r\n        </MenuItem>\r\n        <MenuItem\r\n          onClick={() => {\r\n            dispatch(signOut());\r\n            dispatch(clearBasket());\r\n          }}\r\n        >\r\n          Logout\r\n        </MenuItem>\r\n      </Menu>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SignedInMenu;\r\n","import { ShoppingCart } from '@mui/icons-material';\r\nimport {\r\n  AppBar,\r\n  Badge,\r\n  Box,\r\n  IconButton,\r\n  List,\r\n  ListItem,\r\n  Switch,\r\n  Toolbar,\r\n  Typography,\r\n} from '@mui/material';\r\nimport { Link, NavLink } from 'react-router-dom';\r\nimport { useAppSelector } from '../store/configureStore';\r\nimport SignedInMenu from './SignedInMenu';\r\n// import { useStoreContext } from '../context/StoreContex';\r\n\r\ninterface Props {\r\n  darkMode: boolean;\r\n  handleThemeChange: () => void;\r\n}\r\n\r\nconst midLinks = [\r\n  { title: 'catalog', path: '/catalog' },\r\n  { title: 'about', path: '/about' },\r\n  { title: 'contact', path: '/contact' },\r\n];\r\n\r\nconst rightLinks = [\r\n  { title: 'login', path: '/login' },\r\n  { title: 'register', path: '/register' },\r\n];\r\n\r\nconst navStyles = {\r\n  color: 'inherit',\r\n  textDecoration: 'none',\r\n  typography: 'h6',\r\n  '&:hover': { color: 'grey.500' },\r\n  '&.active': { color: 'text.secondary' },\r\n};\r\n\r\nexport default function Header({ darkMode, handleThemeChange }: Props) {\r\n  // basket is fetched on app initialisation\r\n  // const { basket } = useStoreContext();\r\n  const { basket } = useAppSelector((state) => state.basket);\r\n  const { user } = useAppSelector((state) => state.account);\r\n  // get the total number of items in basket, to show in badge\r\n  const itemCount = basket?.items.reduce((sum, item) => sum + item.quantity, 0);\r\n\r\n  return (\r\n    <AppBar position=\"static\">\r\n      <Toolbar\r\n        sx={{\r\n          display: 'flex',\r\n          justifyContent: 'space-between',\r\n          alignItems: 'center',\r\n        }}\r\n      >\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n          <Typography\r\n            variant=\"h6\"\r\n            component={NavLink}\r\n            to=\"/\"\r\n            exact\r\n            sx={navStyles}\r\n          >\r\n            RE-STORE\r\n          </Typography>\r\n          <Switch checked={darkMode} onChange={handleThemeChange} />\r\n        </Box>\r\n\r\n        <Box>\r\n          <List sx={{ display: 'flex' }}>\r\n            {midLinks.map(({ title, path }) => (\r\n              <ListItem component={NavLink} to={path} key={path} sx={navStyles}>\r\n                {title.toUpperCase()}\r\n              </ListItem>\r\n            ))}\r\n            {user && user.roles?.includes(\"Admin\") && (\r\n              <ListItem component={NavLink} to=\"/inventory\" sx={navStyles}>\r\n                INVENTORY\r\n              </ListItem>\r\n            )}\r\n          </List>\r\n        </Box>\r\n\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n          <IconButton\r\n            component={Link}\r\n            to=\"/basket\"\r\n            size=\"large\"\r\n            sx={{ color: 'inherit' }}\r\n          >\r\n            <Badge badgeContent={itemCount} color=\"secondary\">\r\n              <ShoppingCart />\r\n            </Badge>\r\n          </IconButton>\r\n          {user ? (\r\n            <SignedInMenu />\r\n          ) : (\r\n            <List sx={{ display: 'flex' }}>\r\n              {rightLinks.map(({ title, path }) => (\r\n                <ListItem\r\n                  component={NavLink}\r\n                  to={path}\r\n                  key={path}\r\n                  sx={navStyles}\r\n                >\r\n                  {title.toUpperCase()}\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n          )}\r\n        </Box>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n","import { Button, Container, Divider, Paper, Typography } from \"@mui/material\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\n\r\nconst ServerError = () => {\r\n  const history = useHistory();\r\n  const { state } = useLocation<any>();\r\n  return (\r\n    <Container component={Paper}>\r\n      {state?.error ? (\r\n        <>\r\n          <Typography variant=\"h3\" color=\"error\" gutterBottom>\r\n            {state.error.title}\r\n          </Typography>\r\n          <Divider />\r\n          <Typography>\r\n            {state.error.detail || \"Internal server error\"}\r\n          </Typography>\r\n        </>\r\n      ) : (\r\n        <Typography variant=\"h5\" gutterBottom>\r\n          Server error\r\n        </Typography>\r\n      )}\r\n      <Button onClick={() => history.push(\"/catalog\")}>\r\n        Go back to the store\r\n      </Button>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ServerError;\r\n","import {\r\n  TableContainer,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n} from '@mui/material';\r\nimport { useAppSelector } from '../../app/store/configureStore';\r\nimport { currencyFormat } from '../../app/util/util';\r\n// import { useStoreContext } from '../../app/context/StoreContex';\r\n\r\ninterface Props {\r\n  subtotal?: number;\r\n}\r\n\r\nexport default function BasketSummary({ subtotal }: Props) {\r\n  // const { basket } = useStoreContext();\r\n  const { basket } = useAppSelector((state) => state.basket);\r\n  // if basket is null, return 0 as subtotal\r\n  if (subtotal === undefined)\r\n    subtotal =\r\n      basket?.items.reduce(\r\n        (sum, item) => sum + item.price * item.quantity,\r\n        0\r\n      ) ?? 0;\r\n  const deliveryFee = subtotal >= 100 * 100 ? 0 : 5 * 100;\r\n\r\n  return (\r\n    <>\r\n      <TableContainer component={Paper} variant={'outlined'}>\r\n        <Table>\r\n          <TableBody>\r\n            <TableRow>\r\n              <TableCell colSpan={2}>Subtotal</TableCell>\r\n              <TableCell align=\"right\">{currencyFormat(subtotal)}</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell colSpan={2}>Delivery fee*</TableCell>\r\n              <TableCell align=\"right\">{currencyFormat(deliveryFee)}</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell colSpan={2}>Total</TableCell>\r\n              <TableCell align=\"right\">\r\n                {currencyFormat(subtotal + deliveryFee)}\r\n              </TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>\r\n                <span style={{ fontStyle: 'italic' }}>\r\n                  *Orders over $100 qualify for free delivery\r\n                </span>\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </>\r\n  );\r\n}\r\n","import { Remove, Add, Delete } from '@mui/icons-material';\r\nimport { LoadingButton } from '@mui/lab';\r\nimport {\r\n  TableContainer,\r\n  Paper,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n  Box,\r\n} from '@mui/material';\r\nimport { BasketItem } from '../../app/models/basket';\r\nimport { useAppSelector, useAppDispatch } from '../../app/store/configureStore';\r\nimport { currencyFormat } from '../../app/util/util';\r\nimport { removeBasketItemAsync, addBasketItemAsync } from './basketSlice';\r\n\r\ninterface Props {\r\n  items: BasketItem[];\r\n  isBasket?: boolean;\r\n}\r\n\r\nconst BasketTable = ({ items, isBasket = true }: Props) => {\r\n  const { status } = useAppSelector((state) => state.basket);\r\n  const dispatch = useAppDispatch();\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table sx={{ minWidth: 650 }}>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Product</TableCell>\r\n            <TableCell align=\"right\">Price</TableCell>\r\n            <TableCell align=\"center\">Quantity</TableCell>\r\n            <TableCell align=\"right\">Subtotal</TableCell>\r\n            {isBasket && <TableCell align=\"right\"></TableCell>}\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {items.map((item) => (\r\n            <TableRow\r\n              key={item.productId}\r\n              sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n            >\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                <Box display=\"flex\" alignItems=\"center\">\r\n                  <img\r\n                    src={item.pictureUrl}\r\n                    alt={item.name}\r\n                    style={{ height: 50, marginRight: 20 }}\r\n                  />\r\n                  <span>{item.name}</span>\r\n                </Box>\r\n              </TableCell>\r\n              <TableCell align=\"right\">{currencyFormat(item.price)}</TableCell>\r\n              <TableCell align=\"center\">\r\n                {isBasket && (\r\n                  <LoadingButton\r\n                    loading={\r\n                      status === 'pendingRemoveItem' + item.productId + 'rem'\r\n                    }\r\n                    onClick={() =>\r\n                      dispatch(\r\n                        removeBasketItemAsync({\r\n                          productId: item.productId,\r\n                          quantity: 1,\r\n                          name: 'rem',\r\n                        })\r\n                      )\r\n                    }\r\n                    color=\"error\"\r\n                  >\r\n                    <Remove />\r\n                  </LoadingButton>\r\n                )}\r\n                {item.quantity}\r\n                {isBasket && (\r\n                  <LoadingButton\r\n                    loading={status === 'pendingAddItem' + item.productId}\r\n                    onClick={() =>\r\n                      dispatch(\r\n                        addBasketItemAsync({ productId: item.productId })\r\n                      )\r\n                    }\r\n                    color=\"secondary\"\r\n                  >\r\n                    <Add />\r\n                  </LoadingButton>\r\n                )}\r\n              </TableCell>\r\n              <TableCell align=\"right\">\r\n                {currencyFormat(item.price * item.quantity)}\r\n              </TableCell>\r\n              {isBasket && (\r\n                <TableCell align=\"right\">\r\n                  <LoadingButton\r\n                    loading={\r\n                      status === 'pendingRemoveItem' + item.productId + 'del'\r\n                    }\r\n                    onClick={() =>\r\n                      dispatch(\r\n                        removeBasketItemAsync({\r\n                          productId: item.productId,\r\n                          quantity: item.quantity,\r\n                          name: 'del',\r\n                        })\r\n                      )\r\n                    }\r\n                    color=\"error\"\r\n                  >\r\n                    <Delete />\r\n                  </LoadingButton>\r\n                </TableCell>\r\n              )}\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nexport default BasketTable;\r\n","import { Button, Grid, Typography } from '@mui/material';\r\nimport { Link } from 'react-router-dom';\r\nimport { useAppSelector } from '../../app/store/configureStore';\r\nimport BasketSummary from './BasketSummary';\r\nimport BasketTable from './BasketTable';\r\n\r\nconst BasketPage = () => {\r\n  // basket is fetched on app initialisation\r\n  const { basket } = useAppSelector((state) => state.basket);\r\n\r\n  if (!basket)\r\n    return <Typography variant=\"h3\">Your basket is empty</Typography>;\r\n\r\n  return (\r\n    <>\r\n      <BasketTable items={basket.items} />\r\n      <Grid container>\r\n        <Grid item xs={6} />\r\n        <Grid item xs={6}>\r\n          <BasketSummary />\r\n          <Button\r\n            component={Link}\r\n            to=\"/checkout\"\r\n            variant=\"contained\"\r\n            size=\"large\"\r\n            fullWidth\r\n          >\r\n            Checkout\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BasketPage;\r\n","import {\r\n  Avatar,\r\n  Box,\r\n  Container,\r\n  Grid,\r\n  Paper,\r\n  TextField,\r\n  Typography,\r\n} from '@mui/material';\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport { Link, useHistory, useLocation } from 'react-router-dom';\r\nimport { FieldValues, useForm } from 'react-hook-form';\r\nimport { LoadingButton } from '@mui/lab';\r\nimport { useAppDispatch } from '../../app/store/configureStore';\r\nimport { signInUser } from './accountSlice';\r\n\r\nconst Login = () => {\r\n  // use history obj to push user to new page after login\r\n  const history = useHistory();\r\n  // use location to help redirect to previous page before login\r\n  const location = useLocation<any>();\r\n  const dispatch = useAppDispatch();\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { isSubmitting, errors, isValid },\r\n  } = useForm({\r\n    mode: 'all',\r\n  });\r\n\r\n  const submitForm = async (data: FieldValues) => {\r\n    try {\r\n      await dispatch(signInUser(data));\r\n      // redirect user to previous page or catalog page after login\r\n      history.push(location.state?.from?.pathname || '/catalog');\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container\r\n      component={Paper}\r\n      maxWidth=\"sm\"\r\n      sx={{\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        p: 4,\r\n      }}\r\n    >\r\n      <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\r\n        <LockOutlinedIcon />\r\n      </Avatar>\r\n      <Typography component=\"h1\" variant=\"h5\">\r\n        Sign in\r\n      </Typography>\r\n      <Box\r\n        component=\"form\"\r\n        onSubmit={handleSubmit(submitForm)}\r\n        noValidate\r\n        sx={{ mt: 1 }}\r\n      >\r\n        <TextField\r\n          margin=\"normal\"\r\n          fullWidth\r\n          label=\"Username\"\r\n          autoFocus\r\n          {...register('username', { required: 'Username is required' })}\r\n          error={!!errors.username}\r\n          helperText={errors?.username?.message}\r\n        />\r\n        <TextField\r\n          margin=\"normal\"\r\n          fullWidth\r\n          label=\"Password\"\r\n          type=\"password\"\r\n          {...register('password', { required: 'Password is required' })}\r\n          error={!!errors.password}\r\n          helperText={errors?.password?.message}\r\n        />\r\n        <LoadingButton\r\n          disabled={!isValid}\r\n          loading={isSubmitting}\r\n          type=\"submit\"\r\n          fullWidth\r\n          variant=\"contained\"\r\n          sx={{ mt: 3, mb: 2 }}\r\n        >\r\n          Sign In\r\n        </LoadingButton>\r\n        <Grid container>\r\n          <Grid item>\r\n            <Link to=\"/register\">{\"Don't have an account? Sign Up\"}</Link>\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import {\r\n  Avatar,\r\n  Box,\r\n  Container,\r\n  Grid,\r\n  Paper,\r\n  TextField,\r\n  Typography,\r\n} from '@mui/material';\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useForm } from 'react-hook-form';\r\nimport { LoadingButton } from '@mui/lab';\r\nimport agent from '../../app/api/agent';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst Register = () => {\r\n  // use history obj to push user to new page after login\r\n  const history = useHistory();\r\n\r\n  // use react-hook-form to handle form control, submit and validation\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    setError,\r\n    formState: { isSubmitting, errors, isValid },\r\n  } = useForm({\r\n    mode: 'all',\r\n  });\r\n\r\n  const handleApiErrors = (errors: any) => {\r\n    if (errors) {\r\n      errors.forEach((error: string) => {\r\n        if (error.includes('Password')) {\r\n          setError('password', { message: error });\r\n        } else if (error.includes('Email')) {\r\n          setError('email', { message: error });\r\n        } else if (error.includes('Username')) {\r\n          setError('username', { message: error });\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container\r\n      component={Paper}\r\n      maxWidth=\"sm\"\r\n      sx={{\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        p: 4,\r\n      }}\r\n    >\r\n      <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\r\n        <LockOutlinedIcon />\r\n      </Avatar>\r\n      <Typography component=\"h1\" variant=\"h5\">\r\n        Register\r\n      </Typography>\r\n      <Box\r\n        component=\"form\"\r\n        onSubmit={handleSubmit((data) =>\r\n          agent.Account.register(data)\r\n            .then(() => {\r\n              toast.success('Registration successful - you can now login');\r\n              history.push('/login');\r\n            })\r\n            .catch((error) => handleApiErrors(error))\r\n        )}\r\n        noValidate\r\n        sx={{ mt: 1 }}\r\n      >\r\n        <TextField\r\n          margin=\"normal\"\r\n          fullWidth\r\n          label=\"Username\"\r\n          autoFocus\r\n          {...register('username', { required: 'Username is required' })}\r\n          error={!!errors.username}\r\n          helperText={errors?.username?.message}\r\n        />\r\n        <TextField\r\n          margin=\"normal\"\r\n          fullWidth\r\n          label=\"Email address\"\r\n          {...register('email', {\r\n            required: 'Email is required',\r\n            pattern: {\r\n              value: /^\\w+[\\w-.]*@\\w+((-\\w+)|(\\w*))\\.[a-z]{2,3}$/,\r\n              message: 'Not a valid email address',\r\n            },\r\n          })}\r\n          error={!!errors.email}\r\n          helperText={errors?.email?.message}\r\n        />\r\n        <TextField\r\n          margin=\"normal\"\r\n          fullWidth\r\n          label=\"Password\"\r\n          type=\"password\"\r\n          {...register('password', {\r\n            required: 'Password is required',\r\n            pattern: {\r\n              value:\r\n                /(?=^.{6,10}$)(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#$%^&amp;*()_+}{&quot;:;'?/&gt;.&lt;,])(?!.*\\s).*$/,\r\n              message: 'Password does not meet complexity requirements',\r\n            },\r\n          })}\r\n          error={!!errors.password}\r\n          helperText={errors?.password?.message}\r\n        />\r\n        <LoadingButton\r\n          disabled={!isValid}\r\n          loading={isSubmitting}\r\n          type=\"submit\"\r\n          fullWidth\r\n          variant=\"contained\"\r\n          sx={{ mt: 3, mb: 2 }}\r\n        >\r\n          Register\r\n        </LoadingButton>\r\n        <Grid container>\r\n          <Grid item>\r\n            <Link to=\"/login\">{'Already have an account? Sign In'}</Link>\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import { ComponentType } from 'react';\r\nimport { Redirect, Route, RouteComponentProps, RouteProps } from 'react-router';\r\nimport { toast } from 'react-toastify';\r\nimport { useAppSelector } from '../store/configureStore';\r\n\r\ninterface Props extends RouteProps {\r\n  component: ComponentType<RouteComponentProps<any>> | ComponentType<any>;\r\n  roles?: string[];\r\n}\r\n\r\n// use this PrivateRoute for pretected pages (e.g. CheckoutPage, admin Inventory page)\r\nconst PrivateRoute = ({ component: Component, roles, ...rest }: Props) => {\r\n  const { user } = useAppSelector((state) => state.account);\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => {\r\n        // check if authenticated, if not then redirect to login page\r\n        if (!user) {\r\n          return <Redirect to={{ pathname: '/login', state: { from: props.location } }} />;\r\n        }\r\n        // compared the private route roles and the user's roles\r\n        if (roles && !roles?.some((r) => user.roles?.includes(r))) {\r\n          // if not authorized, redirect to catalog page\r\n          toast.error('Not authorised to access this area');\r\n          return <Redirect to={{ pathname: '/catalog' }} />;\r\n        }\r\n        // if authorised, show the protected content along with props\r\n        return <Component {...props} />;\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import { Box, Typography, Button, Grid } from '@mui/material';\r\nimport { BasketItem } from '../../app/models/basket';\r\nimport { Order } from '../../app/models/order';\r\nimport BasketSummary from '../basket/BasketSummary';\r\nimport BasketTable from '../basket/BasketTable';\r\n\r\ninterface Props {\r\n  order: Order;\r\n  setSelectedOrder: (id: number) => void;\r\n}\r\n\r\nconst OrderDetailed = ({ order, setSelectedOrder }: Props) => {\r\n  const subtotal =\r\n    order.orderItems.reduce(\r\n      (sum, item) => sum + item.quantity * item.price,\r\n      0\r\n    ) ?? 0;\r\n  return (\r\n    <>\r\n      <Box display=\"flex\" justifyContent=\"space-between\">\r\n        <Typography sx={{ p: 2 }} gutterBottom variant=\"h4\">\r\n          Order# {order.id} - {order.orderStatus}\r\n        </Typography>\r\n        <Button\r\n          onClick={() => setSelectedOrder(0)}\r\n          sx={{ m: 2 }}\r\n          size=\"large\"\r\n          variant=\"contained\"\r\n        >\r\n          Back to orders\r\n        </Button>\r\n      </Box>\r\n      <BasketTable items={order.orderItems as BasketItem[]} isBasket={false} />\r\n      <Grid container>\r\n        <Grid item xs={6} />\r\n        <Grid item xs={6}>\r\n          <BasketSummary subtotal={subtotal} />\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrderDetailed;\r\n","import {\r\n  TableContainer,\r\n  Paper,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n  Button,\r\n} from '@mui/material';\r\nimport { useEffect, useState } from 'react';\r\nimport agent from '../../app/api/agent';\r\nimport LoadingComponent from '../../app/layout/LoadingComponent';\r\nimport { Order } from '../../app/models/order';\r\nimport { currencyFormat } from '../../app/util/util';\r\nimport OrderDetailed from './OrderDetailed';\r\n\r\nconst Orders = () => {\r\n  const [orders, setOrders] = useState<Order[] | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n  // for order details, order number (ID) starts from 1\r\n  const [selectedOrderNumber, setSelectedOrderNumber] = useState(0);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    agent.Orders.list()\r\n      .then((orders) => setOrders(orders))\r\n      .catch((error) => console.log(error))\r\n      .finally(() => setLoading(false));\r\n  }, []);\r\n\r\n  if (loading) return <LoadingComponent message=\"Loading orders...\" />;\r\n\r\n  if (selectedOrderNumber > 0)\r\n    return (\r\n      <OrderDetailed\r\n        order={orders?.find((o) => o.id === selectedOrderNumber)!}\r\n        setSelectedOrder={setSelectedOrderNumber}\r\n      />\r\n    );\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Order number</TableCell>\r\n            <TableCell align=\"right\">Total</TableCell>\r\n            <TableCell align=\"right\">Order Date</TableCell>\r\n            <TableCell align=\"right\">Order Status</TableCell>\r\n            <TableCell align=\"right\"></TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {orders?.map((order) => (\r\n            <TableRow\r\n              key={order.id}\r\n              sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n            >\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {order.id}\r\n              </TableCell>\r\n              <TableCell align=\"right\">{currencyFormat(order.total)}</TableCell>\r\n              <TableCell align=\"right\">\r\n                {order.orderDate.split('T')[0]}\r\n              </TableCell>\r\n              <TableCell align=\"right\">{order.orderStatus}</TableCell>\r\n              <TableCell align=\"right\">\r\n                <Button onClick={() => setSelectedOrderNumber(order.id)}>\r\n                  View\r\n                </Button>\r\n              </TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nexport default Orders;\r\n","import { Checkbox, FormControlLabel } from '@mui/material';\r\nimport { useController, UseControllerProps } from 'react-hook-form';\r\n\r\ninterface Props extends UseControllerProps {\r\n  label: string;\r\n  disabled: boolean;\r\n}\r\n\r\nconst AppCheckbox = (props: Props) => {\r\n  const { field } = useController({ ...props, defaultValue: false });\r\n  return (\r\n    <FormControlLabel\r\n      control={\r\n        <Checkbox\r\n          {...field}\r\n          disabled={props.disabled}\r\n          checked={field.value}\r\n          color=\"secondary\"\r\n        />\r\n      }\r\n      label={props.label}\r\n    />\r\n  );\r\n};\r\n\r\nexport default AppCheckbox;\r\n","import { TextField } from '@mui/material';\r\nimport { useController, UseControllerProps } from 'react-hook-form';\r\n\r\n// Props for react-hook-form's useController hook\r\ninterface Props extends UseControllerProps {\r\n  label: string;\r\n  multiline?: boolean;\r\n  rows?: number;\r\n  type?: string;\r\n}\r\n\r\nconst AppTextInput = (props: Props) => {\r\n  // field: attributes of TextField. e.g. name, onChange, label\r\n  const { fieldState, field } = useController({ ...props, defaultValue: '' });\r\n\r\n  return (\r\n    <TextField\r\n      {...props}\r\n      {...field}\r\n      fullWidth\r\n      variant=\"outlined\"\r\n      multiline={props.multiline}\r\n      rows={props.rows}\r\n      type={props.type}\r\n      error={!!fieldState.error}\r\n      helperText={fieldState.error?.message}\r\n    />\r\n  );\r\n};\r\n\r\nexport default AppTextInput;\r\n","import { Grid, Typography } from '@mui/material';\r\nimport { useFormContext } from 'react-hook-form';\r\nimport AppCheckbox from '../../app/components/AppCheckbox';\r\nimport AppTextInput from '../../app/components/AppTextInput';\r\n\r\nexport default function AddressForm() {\r\n  // use react-hook-form to make it a controlled form\r\n  const { control, formState } = useFormContext();\r\n\r\n  return (\r\n    <>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        Shipping address\r\n      </Typography>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} sm={12}>\r\n          <AppTextInput control={control} name=\"fullName\" label=\"Full name\" />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <AppTextInput control={control} name=\"address1\" label=\"Address 1\" />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <AppTextInput control={control} name=\"address2\" label=\"Address 2\" />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <AppTextInput control={control} name=\"city\" label=\"City\" />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <AppTextInput control={control} name=\"state\" label=\"State\" />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <AppTextInput control={control} name=\"zip\" label=\"Zipcode\" />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <AppTextInput control={control} name=\"country\" label=\"Country\" />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <AppCheckbox\r\n            disabled={!formState.isDirty}\r\n            name=\"saveAddress\"\r\n            label=\"Save this as the default address\"\r\n            control={control}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n","import { InputBaseComponentProps } from '@mui/material';\r\nimport { forwardRef, Ref, useImperativeHandle, useRef } from 'react';\r\n\r\ninterface Props extends InputBaseComponentProps {}\r\n\r\n// Retain MUI styling in input field while using Stripe\r\n// forward ref from MUI text-input field to Stripe\r\nexport const StripeInput = forwardRef(function StripeInput(\r\n  { component: Component, ...props }: Props,\r\n  ref: Ref<unknown>\r\n) {\r\n  // create a ref inside StripeInput component\r\n  const elementRef = useRef<any>();\r\n\r\n  // pass in the forwarded ref\r\n  useImperativeHandle(ref, () => ({\r\n    focus: () => elementRef.current.focus,\r\n  }));\r\n\r\n  // \"onReady\" attribute from Stripe doc\r\n  // https://stripe.com/docs/stripe-js/react#element-components\r\n  return (\r\n    <Component\r\n      onReady={(element: any) => (elementRef.current = element)}\r\n      {...props}\r\n    />\r\n  );\r\n});\r\n","import { Grid, TextField, Typography } from '@mui/material';\r\nimport {\r\n  CardCvcElement,\r\n  CardExpiryElement,\r\n  CardNumberElement,\r\n} from '@stripe/react-stripe-js';\r\nimport { StripeElementType } from '@stripe/stripe-js';\r\nimport { useFormContext } from 'react-hook-form';\r\nimport AppTextInput from '../../app/components/AppTextInput';\r\nimport { StripeInput } from './StripeInput';\r\n\r\ninterface Props {\r\n  cardState: { elementError: { [key in StripeElementType]?: string } };\r\n  onCardInputChange: (event: any) => void;\r\n}\r\n\r\nexport default function PaymentForm({ cardState, onCardInputChange }: Props) {\r\n  const { control } = useFormContext();\r\n  return (\r\n    <>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        Payment method\r\n      </Typography>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} md={6}>\r\n          <AppTextInput\r\n            name=\"nameOnCard\"\r\n            label=\"Name on card\"\r\n            control={control}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <TextField\r\n            onChange={onCardInputChange}\r\n            error={!!cardState.elementError.cardNumber}\r\n            helperText={cardState.elementError.cardNumber}\r\n            id=\"cardNumber\"\r\n            label=\"Card number\"\r\n            fullWidth\r\n            autoComplete=\"cc-number\"\r\n            variant=\"outlined\"\r\n            InputLabelProps={{ shrink: true }}\r\n            InputProps={{\r\n              // make Stripe use MUI style\r\n              inputComponent: StripeInput,\r\n              inputProps: {\r\n                component: CardNumberElement,\r\n              },\r\n            }}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <TextField\r\n            onChange={onCardInputChange}\r\n            error={!!cardState.elementError.cardExpiry}\r\n            helperText={cardState.elementError.cardExpiry}\r\n            id=\"expDate\"\r\n            label=\"Expiry date\"\r\n            fullWidth\r\n            autoComplete=\"cc-exp\"\r\n            variant=\"outlined\"\r\n            InputLabelProps={{ shrink: true }}\r\n            InputProps={{\r\n              // make Stripe use MUI style\r\n              inputComponent: StripeInput,\r\n              inputProps: {\r\n                component: CardExpiryElement,\r\n              },\r\n            }}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <TextField\r\n            onChange={onCardInputChange}\r\n            error={!!cardState.elementError.cardCvc}\r\n            helperText={cardState.elementError.cardCvc}\r\n            id=\"cvv\"\r\n            label=\"CVV\"\r\n            fullWidth\r\n            autoComplete=\"cc-csc\"\r\n            variant=\"outlined\"\r\n            InputLabelProps={{ shrink: true }}\r\n            InputProps={{\r\n              // make Stripe use MUI style\r\n              inputComponent: StripeInput,\r\n              inputProps: {\r\n                component: CardCvcElement,\r\n              },\r\n            }}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n","import { Grid, Typography } from '@mui/material';\r\nimport { useAppSelector } from '../../app/store/configureStore';\r\nimport BasketSummary from '../basket/BasketSummary';\r\nimport BasketTable from '../basket/BasketTable';\r\n\r\nexport default function Review() {\r\n  const { basket } = useAppSelector((state) => state.basket);\r\n\r\n  return (\r\n    <>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        Order summary\r\n      </Typography>\r\n      {basket && <BasketTable items={basket.items} isBasket={false} />}\r\n      <Grid container>\r\n        <Grid item xs={6} />\r\n        <Grid item xs={6}>\r\n          <BasketSummary />\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n","import * as yup from 'yup';\r\n\r\n// laternative way to validate a form\r\nexport const validationSchema = [\r\n  // validate shipping address page\r\n  yup.object({\r\n    fullName: yup.string().required('Full name is required'),\r\n    address1: yup.string().required('Address line 1 is required'),\r\n    address2: yup.string().required(),\r\n    city: yup.string().required(),\r\n    state: yup.string().required(),\r\n    zip: yup.string().required(),\r\n    country: yup.string().required(),\r\n  }),\r\n  // no need to validate review page\r\n  yup.object(),\r\n  // validate payment page\r\n  yup.object({\r\n    nameOnCard: yup.string().required(),\r\n  }),\r\n];\r\n","import {\r\n  Box,\r\n  Button,\r\n  Paper,\r\n  Step,\r\n  StepLabel,\r\n  Stepper,\r\n  Typography,\r\n} from '@mui/material';\r\nimport { useEffect, useState } from 'react';\r\nimport { FieldValues, FormProvider, useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport AddressForm from './AddressForm';\r\nimport PaymentForm from './PaymentForm';\r\nimport Review from './Review';\r\nimport { validationSchema } from './checkoutValidation';\r\nimport agent from '../../app/api/agent';\r\nimport { useAppDispatch, useAppSelector } from '../../app/store/configureStore';\r\nimport { clearBasket } from '../basket/basketSlice';\r\nimport { LoadingButton } from '@mui/lab';\r\nimport { StripeElementType } from '@stripe/stripe-js';\r\nimport {\r\n  CardNumberElement,\r\n  useElements,\r\n  useStripe,\r\n} from '@stripe/react-stripe-js';\r\n\r\nconst steps = ['Shipping address', 'Review your order', 'Payment details'];\r\n\r\nconst CheckoutPage = () => {\r\n  const [activeStep, setActiveStep] = useState(0);\r\n  const [orderNumber, setOrderNumber] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const dispatch = useAppDispatch();\r\n\r\n  // add local state to track Stripe card input for validation\r\n  const [cardState, setCardState] = useState<{\r\n    elementError: { [key in StripeElementType]?: string };\r\n  }>({ elementError: {} });\r\n\r\n  const [cardComplete, setCardComplete] = useState<any>({\r\n    cardNumber: false,\r\n    cardExpiry: false,\r\n    cardCvc: false,\r\n  });\r\n\r\n  // indicate payment status from Stripe\r\n  const [paymentMessage, setPaymentMessage] = useState('');\r\n  const [paymentSucceeded, setPaymentSucceeded] = useState(false);\r\n\r\n  // basket in redux contains ClientSecret from Stripe\r\n  const { basket } = useAppSelector((state) => state.basket);\r\n\r\n  // create actual payment\r\n  const stripe = useStripe();\r\n  // card elements, e.g. CardNumberElement\r\n  const elements = useElements();\r\n\r\n  // track if card inputs are complete\r\n  const onCardInputChange = (event: any) => {\r\n    setCardState({\r\n      ...cardState,\r\n      // append element error if exists\r\n      elementError: {\r\n        ...cardState.elementError,\r\n        // elementType: cardNumber, cardExpiry, cardCvc etc.\r\n        [event.elementType]: event.error?.message,\r\n      },\r\n    });\r\n    setCardComplete({\r\n      ...cardComplete,\r\n      [event.elementType]: event.complete,\r\n    });\r\n  };\r\n\r\n  const getStepContent = (step: number) => {\r\n    switch (step) {\r\n      case 0:\r\n        return <AddressForm />;\r\n      case 1:\r\n        return <Review />;\r\n      case 2:\r\n        return (\r\n          <PaymentForm\r\n            cardState={cardState}\r\n            onCardInputChange={onCardInputChange}\r\n          />\r\n        );\r\n      default:\r\n        throw new Error('Unknown step');\r\n    }\r\n  };\r\n\r\n  // is an array with each element for each checkout-step\r\n  const currentValidationSchema = validationSchema[activeStep];\r\n\r\n  // pass the methods to child components through <FormProvider>\r\n  const methods = useForm({\r\n    mode: 'all',\r\n    resolver: yupResolver(currentValidationSchema),\r\n  });\r\n\r\n  useEffect(() => {\r\n    // get previously saved address from DB\r\n    agent.Account.fetchAddress().then((response) => {\r\n      // reset the form with the values from API\r\n      if (response) {\r\n        methods.reset({\r\n          ...methods.getValues(),\r\n          ...response,\r\n          saveAddress: false,\r\n        });\r\n      }\r\n    });\r\n  }, [methods]);\r\n\r\n  // once the PaymentIntent is set, submit order to Stripe\r\n  const submitOrder = async (data: FieldValues) => {\r\n    // all frontend validations have passed at this stage\r\n    setLoading(true);\r\n    // destructure nameOnCard and saveAddress, everything else is shipping address\r\n    const { nameOnCard, saveAddress, ...shippingAddress } = data;\r\n    if (!stripe || !elements) return; // stripe is not ready\r\n    try {\r\n      // only provide card number element, then Stripe will get the remaining elements\r\n      const cardElement = elements.getElement(CardNumberElement);\r\n      // call Stripe API\r\n      const paymentResult = await stripe.confirmCardPayment(\r\n        basket?.clientSecret!,\r\n        {\r\n          payment_method: {\r\n            card: cardElement!,\r\n            billing_details: {\r\n              name: nameOnCard,\r\n            },\r\n          },\r\n        }\r\n      );\r\n      console.log(paymentResult);\r\n      // if payment is successful, create the order\r\n      if (paymentResult.paymentIntent?.status === 'succeeded') {\r\n        // creating order will have order number back from API\r\n        const orderNumber = await agent.Orders.create({\r\n          saveAddress,\r\n          shippingAddress,\r\n        });\r\n        setOrderNumber(orderNumber);\r\n        setPaymentSucceeded(true);\r\n        setPaymentMessage('Thank you - we have received your payment');\r\n        setActiveStep(activeStep + 1); // last step is to display paymentMessage\r\n        dispatch(clearBasket()); // clear basket from redux state\r\n        setLoading(false);\r\n      } else {\r\n        setPaymentMessage(paymentResult.error?.message!);\r\n        setPaymentSucceeded(false);\r\n        setLoading(false);\r\n        setActiveStep(activeStep + 1); // last step is to display paymentMessage\r\n      }\r\n    } catch (error: any) {\r\n      console.log(error);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleNext = async (data: FieldValues) => {\r\n    // second last step is to make payment\r\n    if (activeStep === steps.length - 1) {\r\n      await submitOrder(data);\r\n    } else {\r\n      setActiveStep(activeStep + 1);\r\n    }\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep(activeStep - 1);\r\n  };\r\n\r\n  const submitDisabled = (): boolean => {\r\n    // check if on PaymentForm (second last step)\r\n    if (activeStep === steps.length - 1) {\r\n      // disable the submit button if any stripe or custom validation fails\r\n      return (\r\n        !cardComplete.cardCvc ||\r\n        !cardComplete.cardExpiry ||\r\n        !cardComplete.cardNumber ||\r\n        !methods.formState.isValid\r\n      );\r\n    }\r\n    // if not on PaymentForm, noly check custom validation\r\n    return !methods.formState.isValid;\r\n  };\r\n\r\n  return (\r\n    <FormProvider {...methods}>\r\n      <Paper\r\n        variant=\"outlined\"\r\n        sx={{ my: { xs: 3, md: 6 }, p: { xs: 2, md: 3 } }}\r\n      >\r\n        <Typography component=\"h1\" variant=\"h4\" align=\"center\">\r\n          Checkout\r\n        </Typography>\r\n        <Stepper activeStep={activeStep} sx={{ pt: 3, pb: 5 }}>\r\n          {steps.map((label) => (\r\n            <Step key={label}>\r\n              <StepLabel>{label}</StepLabel>\r\n            </Step>\r\n          ))}\r\n        </Stepper>\r\n        <>\r\n          {activeStep === steps.length ? (\r\n            <>\r\n              <Typography variant=\"h5\" gutterBottom>\r\n                {paymentMessage}\r\n              </Typography>\r\n              {paymentSucceeded ? (\r\n                <Typography variant=\"subtitle1\">\r\n                  Your order number is #{orderNumber}. We have not emailed your\r\n                  order confirmation, and will not send you an update when your\r\n                  order has shipped as this is a fake store!\r\n                </Typography>\r\n              ) : (\r\n                <Button variant=\"contained\" onClick={handleBack}>\r\n                  Go back and try again\r\n                </Button>\r\n              )}\r\n            </>\r\n          ) : (\r\n            <form onSubmit={methods.handleSubmit(handleNext)}>\r\n              {getStepContent(activeStep)}\r\n              <Box sx={{ display: 'flex', justifyContent: 'flex-end' }}>\r\n                {activeStep !== 0 && (\r\n                  <Button onClick={handleBack} sx={{ mt: 3, ml: 1 }}>\r\n                    Back\r\n                  </Button>\r\n                )}\r\n                <LoadingButton\r\n                  loading={loading}\r\n                  disabled={submitDisabled()}\r\n                  variant=\"contained\"\r\n                  type=\"submit\"\r\n                  sx={{ mt: 3, ml: 1 }}\r\n                >\r\n                  {activeStep === steps.length - 1 ? 'Place order' : 'Next'}\r\n                </LoadingButton>\r\n              </Box>\r\n            </form>\r\n          )}\r\n        </>\r\n      </Paper>\r\n    </FormProvider>\r\n  );\r\n};\r\n\r\nexport default CheckoutPage;\r\n","import { Elements } from '@stripe/react-stripe-js';\r\nimport { loadStripe } from '@stripe/stripe-js';\r\nimport { useEffect, useState } from 'react';\r\nimport agent from '../../app/api/agent';\r\nimport LoadingComponent from '../../app/layout/LoadingComponent';\r\nimport { useAppDispatch } from '../../app/store/configureStore';\r\nimport { setBasket } from '../basket/basketSlice';\r\nimport CheckoutPage from './CheckoutPage';\r\n\r\n// pass in the publishable key from Stripe\r\nconst stripePromise = loadStripe(\r\n  'pk_test_51LAOElL4wuS1zpNGly7iaNogF74bTQ3a2ImXIGbxQuLrQpPCm58RouWYNoyzYxsV6kbp1sps8YIxgezgOW6OO0ID00kMzoz10H'\r\n);\r\n\r\n// wrap the Stripe provider around the CheckoutPage\r\n// https://stripe.com/docs/stripe-js/react#elements-provider\r\nconst CheckoutWrapper = () => {\r\n  const dispatch = useAppDispatch();\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // response will include the basket with paymentIntent and clientSecret\r\n    agent.Payments.createPaymentIntent()\r\n      .then((basket) => dispatch(setBasket(basket)))\r\n      .catch((error: any) => console.log(error))\r\n      .finally(() => setLoading(false));\r\n  }, [dispatch]);\r\n\r\n  if (loading) return <LoadingComponent message=\"Loading checkout...\" />;\r\n\r\n  return (\r\n    <Elements stripe={stripePromise}>\r\n      <CheckoutPage />\r\n    </Elements>\r\n  );\r\n};\r\n\r\nexport default CheckoutWrapper;\r\n","import { UploadFile } from '@mui/icons-material';\r\nimport { FormControl, FormHelperText, Typography } from '@mui/material';\r\nimport { useCallback } from 'react';\r\nimport { useDropzone } from 'react-dropzone';\r\nimport { useController, UseControllerProps } from 'react-hook-form';\r\n\r\ninterface Props extends UseControllerProps {}\r\n\r\nconst AppDropzone = (props: Props) => {\r\n  const { fieldState, field } = useController({ ...props, defaultValue: null });\r\n\r\n  // styles for the dropzone\r\n  const dzStyles = {\r\n    display: 'flex',\r\n    border: 'dashed 3px #eee',\r\n    borderColor: '#eee',\r\n    borderRadius: '5px',\r\n    paddingTop: 30,\r\n    height: 200,\r\n    width: 500,\r\n    alignItems: 'center',\r\n  };\r\n\r\n  const dzActive = {\r\n    borderColor: 'green',\r\n  };\r\n\r\n  const onDrop = useCallback(\r\n    (acceptedFiles) => {\r\n      // only allow users to upload 1 image at a time\r\n      acceptedFiles[0] = Object.assign(acceptedFiles[0], {\r\n        // give the file an additional property: \"preview\"\r\n        preview: URL.createObjectURL(acceptedFiles[0]),\r\n      });\r\n      field.onChange(acceptedFiles[0]);\r\n    },\r\n    [field]\r\n  );\r\n\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\r\n\r\n  return (\r\n    <div {...getRootProps()}>\r\n      <FormControl\r\n        style={isDragActive ? { ...dzStyles, ...dzActive } : dzStyles}\r\n        error={!!fieldState.error?.message}\r\n      >\r\n        <input {...getInputProps()} />\r\n        <UploadFile sx={{ fontSize: '100px' }} />\r\n        <Typography variant=\"h4\">Drop image here</Typography>\r\n        <FormHelperText>{fieldState.error?.message}</FormHelperText>\r\n      </FormControl>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppDropzone;\r\n","import {\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  FormHelperText,\r\n} from '@mui/material';\r\nimport { useController, UseControllerProps } from 'react-hook-form';\r\n\r\n// props for react-hook-form\r\ninterface Props extends UseControllerProps {\r\n  label: string;\r\n  items: string[];\r\n}\r\n\r\n// reusable drop-down list component\r\nconst AppSelectList = (props: Props) => {\r\n  // use react-hook-form to control the form\r\n  const { fieldState, field } = useController({ ...props, defaultValue: '' });\r\n  return (\r\n    <FormControl fullWidth error={!!fieldState.error}>\r\n      <InputLabel>{props.label}</InputLabel>\r\n      <Select value={field.value} label={props.label} onChange={field.onChange}>\r\n        {props.items.map((item, index) => (\r\n          <MenuItem key={index} value={item}>\r\n            {item}\r\n          </MenuItem>\r\n        ))}\r\n      </Select>\r\n      <FormHelperText>{fieldState.error?.message}</FormHelperText>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default AppSelectList;\r\n","import * as yup from 'yup';\r\n\r\nexport const validationSchema = yup.object({\r\n  name: yup.string().required(),\r\n  brand: yup.string().required(),\r\n  type: yup.string().required(),\r\n  price: yup.number().required().moreThan(100),\r\n  quantityInStock: yup.number().required().min(0),\r\n  description: yup.string().required(),\r\n  // use .when() to add conditions\r\n  file: yup.mixed().when('pictureUrl', {\r\n    is: (value: string) => !value, // check if pictureUrl is empty, not empty means updating an existing product\r\n    then: yup.mixed().required('Please provide an image'), // image only required when creating a product (not when updating a product)\r\n  }),\r\n});\r\n","import { Typography, Grid, Paper, Box, Button } from '@mui/material';\r\nimport { useEffect } from 'react';\r\nimport { FieldValues, useForm } from 'react-hook-form';\r\nimport AppDropzone from '../../app/components/AppDropzone';\r\nimport AppSelectList from '../../app/components/AppSelectList';\r\nimport AppTextInput from '../../app/components/AppTextInput';\r\nimport useProducts from '../../app/hooks/useProducts';\r\nimport { Product } from '../../app/models/product';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport { validationSchema } from './productValidation';\r\nimport agent from '../../app/api/agent';\r\nimport { useAppDispatch } from '../../app/store/configureStore';\r\nimport { setProduct } from '../catalog/catalogSlice';\r\nimport { LoadingButton } from '@mui/lab';\r\n\r\ninterface Props {\r\n  product?: Product;\r\n  cancelEdit: () => void;\r\n}\r\n\r\nconst ProductForm = ({ product, cancelEdit }: Props) => {\r\n  const {\r\n    control,\r\n    reset,\r\n    handleSubmit,\r\n    watch,\r\n    formState: { isDirty, isSubmitting },\r\n  } = useForm({\r\n    resolver: yupResolver(validationSchema),\r\n  });\r\n  const { brands, types } = useProducts();\r\n  // watchFile is to preview the uploaded image, \"file\" is the name of dropzone\r\n  const watchFile = watch('file', null);\r\n  const dispatch = useAppDispatch();\r\n\r\n  useEffect(() => {\r\n    // reset the product if form is not dirty and there is no watchFile\r\n    if (product && !watchFile && !isDirty) reset(product);\r\n    // remove watchFile when component is destroyed/unmounted\r\n    return () => {\r\n      // remove the file\r\n      if (watchFile) URL.revokeObjectURL(watchFile.preview);\r\n    };\r\n  }, [isDirty, product, reset, watchFile]);\r\n\r\n  const handleSubmitData = async (data: FieldValues) => {\r\n    try {\r\n      let response: Product; // product from API\r\n      if (product) {\r\n        // admin updating an existing product\r\n        response = await agent.Admin.updateProduct(data);\r\n      } else {\r\n        // admin crerating a new product\r\n        response = await agent.Admin.createProduct(data);\r\n      }\r\n      // update catalog state\r\n      dispatch(setProduct(response));\r\n      // leave the form\r\n      cancelEdit();\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box component={Paper} sx={{ p: 4 }}>\r\n      <Typography variant=\"h4\" gutterBottom sx={{ mb: 4 }}>\r\n        Product Details\r\n      </Typography>\r\n      <form onSubmit={handleSubmit(handleSubmitData)}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} sm={12}>\r\n            <AppTextInput control={control} name=\"name\" label=\"Product name\" />\r\n          </Grid>\r\n          <Grid item xs={12} sm={6}>\r\n            <AppSelectList\r\n              control={control}\r\n              items={brands}\r\n              name=\"brand\"\r\n              label=\"Brand\"\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={6}>\r\n            <AppSelectList\r\n              control={control}\r\n              items={types}\r\n              name=\"type\"\r\n              label=\"Type\"\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={6}>\r\n            <AppTextInput\r\n              control={control}\r\n              type=\"number\"\r\n              name=\"price\"\r\n              label=\"Price\"\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={6}>\r\n            <AppTextInput\r\n              control={control}\r\n              type=\"number\"\r\n              name=\"quantityInStock\"\r\n              label=\"Quantity in Stock\"\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <AppTextInput\r\n              control={control}\r\n              multiline={true}\r\n              rows={4}\r\n              name=\"description\"\r\n              label=\"Description\"\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Box\r\n              display=\"flex\"\r\n              justifyContent=\"space-between\"\r\n              alignItems=\"center\"\r\n            >\r\n              <AppDropzone control={control} name=\"file\" />\r\n              {watchFile ? (\r\n                <img\r\n                  src={watchFile.preview}\r\n                  alt=\"preview\"\r\n                  style={{ maxHeight: 200 }}\r\n                />\r\n              ) : (\r\n                <img\r\n                  src={product?.pictureUrl}\r\n                  alt={product?.name}\r\n                  style={{ maxHeight: 200 }}\r\n                />\r\n              )}\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n        <Box display=\"flex\" justifyContent=\"space-between\" sx={{ mt: 3 }}>\r\n          <Button onClick={cancelEdit} variant=\"contained\" color=\"inherit\">\r\n            Cancel\r\n          </Button>\r\n          <LoadingButton\r\n            loading={isSubmitting}\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            color=\"success\"\r\n          >\r\n            Submit\r\n          </LoadingButton>\r\n        </Box>\r\n      </form>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ProductForm;\r\n","import {\r\n  Typography,\r\n  Button,\r\n  TableContainer,\r\n  Paper,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n  Box,\r\n} from '@mui/material';\r\nimport { Edit, Delete } from '@mui/icons-material';\r\nimport { currencyFormat } from '../../app/util/util';\r\nimport useProducts from '../../app/hooks/useProducts';\r\nimport AppPagination from '../../app/components/AppPagination';\r\nimport { useAppDispatch } from '../../app/store/configureStore';\r\nimport { removeProduct, setPageNumber } from '../catalog/catalogSlice';\r\nimport { useState } from 'react';\r\nimport ProductForm from './ProductForm';\r\nimport { Product } from '../../app/models/product';\r\nimport agent from '../../app/api/agent';\r\nimport { LoadingButton } from '@mui/lab';\r\n\r\nexport default function Inventory() {\r\n  // use custom hook to get products and pagination metadata\r\n  const { products, metaData } = useProducts();\r\n\r\n  const dispatch = useAppDispatch();\r\n\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [selectedProduct, setSelectedProduct] = useState<Product | undefined>(undefined);\r\n  const [loading, setLoading] = useState(false);\r\n  const [target, setTarget] = useState(0); // set spinner for only the selected product\r\n\r\n  // click Edit button\r\n  const handleSelectProduct = (product: Product) => {\r\n    setSelectedProduct(product);\r\n    setEditMode(true);\r\n  };\r\n\r\n  // click trash bin button\r\n  const handleDeleteProduct = (id: number) => {\r\n    setLoading(true);\r\n    setTarget(id); // only the selected product have spinner\r\n    agent.Admin.deleteProduct(id)\r\n      .then(() => dispatch(removeProduct(id)))\r\n      .catch((error) => console.log(error))\r\n      .finally(() => setLoading(false));\r\n  };\r\n\r\n  // click Cancel button in product edit form\r\n  const cancelEdit = () => {\r\n    // de-select product\r\n    if (selectedProduct) setSelectedProduct(undefined);\r\n    setEditMode(false);\r\n  };\r\n\r\n  if (editMode)\r\n    return <ProductForm product={selectedProduct} cancelEdit={cancelEdit} />;\r\n\r\n  return (\r\n    <>\r\n      <Box display=\"flex\" justifyContent=\"space-between\">\r\n        <Typography sx={{ p: 2 }} variant=\"h4\">\r\n          Inventory\r\n        </Typography>\r\n        <Button\r\n          sx={{ m: 2 }}\r\n          onClick={() => setEditMode(true)}\r\n          size=\"large\"\r\n          variant=\"contained\"\r\n        >\r\n          Create\r\n        </Button>\r\n      </Box>\r\n      <TableContainer component={Paper}>\r\n        <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>#</TableCell>\r\n              <TableCell align=\"left\">Product</TableCell>\r\n              <TableCell align=\"right\">Price</TableCell>\r\n              <TableCell align=\"center\">Type</TableCell>\r\n              <TableCell align=\"center\">Brand</TableCell>\r\n              <TableCell align=\"center\">Quantity</TableCell>\r\n              <TableCell align=\"right\"></TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {products.map((product) => (\r\n              <TableRow\r\n                key={product.id}\r\n                sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n              >\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {product.id}\r\n                </TableCell>\r\n                <TableCell align=\"left\">\r\n                  <Box display=\"flex\" alignItems=\"center\">\r\n                    <img\r\n                      src={product.pictureUrl}\r\n                      alt={product.name}\r\n                      style={{ height: 50, marginRight: 20 }}\r\n                    />\r\n                    <span>{product.name}</span>\r\n                  </Box>\r\n                </TableCell>\r\n                <TableCell align=\"right\">\r\n                  {currencyFormat(product.price)}\r\n                </TableCell>\r\n                <TableCell align=\"center\">{product.type}</TableCell>\r\n                <TableCell align=\"center\">{product.brand}</TableCell>\r\n                <TableCell align=\"center\">{product.quantityInStock}</TableCell>\r\n                <TableCell align=\"right\">\r\n                  <Button\r\n                    onClick={() => handleSelectProduct(product)}\r\n                    startIcon={<Edit />}\r\n                  />\r\n                  <LoadingButton\r\n                    loading={loading && target === product.id}\r\n                    onClick={() => handleDeleteProduct(product.id)}\r\n                    startIcon={<Delete />}\r\n                    color=\"error\"\r\n                  />\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      {metaData && (\r\n        <Box sx={{ pt: 2 }}>\r\n          <AppPagination\r\n            metaData={metaData}\r\n            onPageChange={(page: number) =>\r\n              dispatch(setPageNumber({ pageNumber: page }))\r\n            }\r\n          />\r\n        </Box>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import {\r\n  Container,\r\n  createTheme,\r\n  CssBaseline,\r\n  ThemeProvider,\r\n} from '@mui/material';\r\nimport { useCallback, useEffect, useState } from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport AboutPage from '../../features/about/AboutPage';\r\nimport Catalog from '../../features/catalog/Catalog';\r\nimport ProductDetails from '../../features/catalog/ProductDetails';\r\nimport ContactPage from '../../features/contact/ContactPage';\r\nimport HomePage from '../../features/home/HomePage';\r\nimport Header from './Header';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport ServerError from '../errors/ServerError';\r\nimport NotFound from '../errors/NotFound';\r\nimport BasketPage from '../../features/basket/BasketPage';\r\nimport LoadingComponent from './LoadingComponent';\r\nimport { useAppDispatch } from '../store/configureStore';\r\nimport { fetchBasketAsync } from '../../features/basket/basketSlice';\r\nimport Login from '../../features/account/Login';\r\nimport Register from '../../features/account/Register';\r\nimport { fetchCurrentUser } from '../../features/account/accountSlice';\r\nimport PrivateRoute from './PrivateRoute';\r\nimport Orders from '../../features/orders/Orders';\r\nimport CheckoutWrapper from '../../features/checkout/CheckoutWrapper';\r\nimport Inventory from '../../features/admin/Inventory';\r\n// import { useStoreContext } from '../context/StoreContex';\r\n\r\nfunction App() {\r\n  // const { setBasket } = useStoreContext();\r\n  const dispatch = useAppDispatch();\r\n\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // useCallback to prevent re-render in uesEffect\r\n  const initApp = useCallback(async () => {\r\n    try {\r\n      await dispatch(fetchCurrentUser());\r\n      await dispatch(fetchBasketAsync());\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    initApp().then(() => setLoading(false));\r\n  }, [initApp]);\r\n\r\n  const [darkMode, setDarkMode] = useState(false);\r\n  const paletteType = darkMode ? 'dark' : 'light';\r\n  // set Dark Mode using MUI theme\r\n  const theme = createTheme({\r\n    palette: {\r\n      mode: paletteType,\r\n      background: {\r\n        default: paletteType === 'light' ? '#eaeaea' : '#121212',\r\n      },\r\n    },\r\n  });\r\n\r\n  const handleThemeChange = () => {\r\n    setDarkMode(!darkMode);\r\n  };\r\n\r\n  if (loading) return <LoadingComponent message=\"Initialising app...\" />;\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <ToastContainer position=\"bottom-right\" theme=\"colored\" hideProgressBar />\r\n      <CssBaseline />\r\n      <Header darkMode={darkMode} handleThemeChange={handleThemeChange} />\r\n      <Route exact path=\"/\" component={HomePage} />\r\n      <Route\r\n        path={'/(.+)'} // regex for '/any-path'\r\n        render={() => (\r\n          <Container  sx={{ mt: 4 }}>\r\n            <Switch>\r\n              <Route exact path=\"/catalog\" component={Catalog} />\r\n              <Route path=\"/catalog/:id\" component={ProductDetails} />\r\n              <Route path=\"/about\" component={AboutPage} />\r\n              <Route path=\"/contact\" component={ContactPage} />\r\n              <Route path=\"/basket\" component={BasketPage} />\r\n              <PrivateRoute path=\"/checkout\" component={CheckoutWrapper} />\r\n              <PrivateRoute path=\"/orders\" component={Orders} />\r\n              <PrivateRoute roles={[\"Admin\"]} path=\"/inventory\" component={Inventory} />\r\n              <Route path=\"/login\" component={Login} />\r\n              <Route path=\"/register\" component={Register} />\r\n              <Route path=\"/server-error\" component={ServerError} />\r\n              <Route component={NotFound} />\r\n            </Switch>\r\n          </Container>\r\n        )}\r\n      />\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './app/layout/styles.css';\r\nimport App from './app/layout/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Router } from 'react-router-dom';\r\nimport { createBrowserHistory } from 'history';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './app/store/configureStore';\r\nimport 'slick-carousel/slick/slick.css'\r\nimport 'slick-carousel/slick/slick-theme.css'\r\n\r\nexport const history = createBrowserHistory();\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Router history={history}>\r\n      <Provider store={store}>\r\n        <App />\r\n      </Provider>\r\n    </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}